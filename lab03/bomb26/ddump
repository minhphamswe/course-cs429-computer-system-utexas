
bomb:     file format elf32-i386


Disassembly of section .init:

08048804 <_init>:
 8048804:	55                   	push   %ebp
 8048805:	89 e5                	mov    %esp,%ebp
 8048807:	53                   	push   %ebx
 8048808:	83 ec 04             	sub    $0x4,%esp
 804880b:	e8 00 00 00 00       	call   8048810 <_init+0xc>
 8048810:	5b                   	pop    %ebx
 8048811:	81 c3 e4 37 00 00    	add    $0x37e4,%ebx
 8048817:	8b 93 fc ff ff ff    	mov    -0x4(%ebx),%edx
 804881d:	85 d2                	test   %edx,%edx
 804881f:	74 05                	je     8048826 <_init+0x22>
 8048821:	e8 5e 00 00 00       	call   8048884 <__gmon_start__@plt>
 8048826:	e8 85 02 00 00       	call   8048ab0 <frame_dummy>
 804882b:	e8 a0 1a 00 00       	call   804a2d0 <__do_global_ctors_aux>
 8048830:	58                   	pop    %eax
 8048831:	5b                   	pop    %ebx
 8048832:	c9                   	leave  
 8048833:	c3                   	ret    

Disassembly of section .plt:

08048834 <__errno_location@plt-0x10>:
 8048834:	ff 35 f8 bf 04 08    	pushl  0x804bff8
 804883a:	ff 25 fc bf 04 08    	jmp    *0x804bffc
 8048840:	00 00                	add    %al,(%eax)
	...

08048844 <__errno_location@plt>:
 8048844:	ff 25 00 c0 04 08    	jmp    *0x804c000
 804884a:	68 00 00 00 00       	push   $0x0
 804884f:	e9 e0 ff ff ff       	jmp    8048834 <_init+0x30>

08048854 <connect@plt>:
 8048854:	ff 25 04 c0 04 08    	jmp    *0x804c004
 804885a:	68 08 00 00 00       	push   $0x8
 804885f:	e9 d0 ff ff ff       	jmp    8048834 <_init+0x30>

08048864 <__fprintf_chk@plt>:
 8048864:	ff 25 08 c0 04 08    	jmp    *0x804c008
 804886a:	68 10 00 00 00       	push   $0x10
 804886f:	e9 c0 ff ff ff       	jmp    8048834 <_init+0x30>

08048874 <signal@plt>:
 8048874:	ff 25 0c c0 04 08    	jmp    *0x804c00c
 804887a:	68 18 00 00 00       	push   $0x18
 804887f:	e9 b0 ff ff ff       	jmp    8048834 <_init+0x30>

08048884 <__gmon_start__@plt>:
 8048884:	ff 25 10 c0 04 08    	jmp    *0x804c010
 804888a:	68 20 00 00 00       	push   $0x20
 804888f:	e9 a0 ff ff ff       	jmp    8048834 <_init+0x30>

08048894 <__isoc99_sscanf@plt>:
 8048894:	ff 25 14 c0 04 08    	jmp    *0x804c014
 804889a:	68 28 00 00 00       	push   $0x28
 804889f:	e9 90 ff ff ff       	jmp    8048834 <_init+0x30>

080488a4 <__printf_chk@plt>:
 80488a4:	ff 25 18 c0 04 08    	jmp    *0x804c018
 80488aa:	68 30 00 00 00       	push   $0x30
 80488af:	e9 80 ff ff ff       	jmp    8048834 <_init+0x30>

080488b4 <getenv@plt>:
 80488b4:	ff 25 1c c0 04 08    	jmp    *0x804c01c
 80488ba:	68 38 00 00 00       	push   $0x38
 80488bf:	e9 70 ff ff ff       	jmp    8048834 <_init+0x30>

080488c4 <write@plt>:
 80488c4:	ff 25 20 c0 04 08    	jmp    *0x804c020
 80488ca:	68 40 00 00 00       	push   $0x40
 80488cf:	e9 60 ff ff ff       	jmp    8048834 <_init+0x30>

080488d4 <fgets@plt>:
 80488d4:	ff 25 24 c0 04 08    	jmp    *0x804c024
 80488da:	68 48 00 00 00       	push   $0x48
 80488df:	e9 50 ff ff ff       	jmp    8048834 <_init+0x30>

080488e4 <__libc_start_main@plt>:
 80488e4:	ff 25 28 c0 04 08    	jmp    *0x804c028
 80488ea:	68 50 00 00 00       	push   $0x50
 80488ef:	e9 40 ff ff ff       	jmp    8048834 <_init+0x30>

080488f4 <__memcpy_chk@plt>:
 80488f4:	ff 25 2c c0 04 08    	jmp    *0x804c02c
 80488fa:	68 58 00 00 00       	push   $0x58
 80488ff:	e9 30 ff ff ff       	jmp    8048834 <_init+0x30>

08048904 <read@plt>:
 8048904:	ff 25 30 c0 04 08    	jmp    *0x804c030
 804890a:	68 60 00 00 00       	push   $0x60
 804890f:	e9 20 ff ff ff       	jmp    8048834 <_init+0x30>

08048914 <strtol@plt>:
 8048914:	ff 25 34 c0 04 08    	jmp    *0x804c034
 804891a:	68 68 00 00 00       	push   $0x68
 804891f:	e9 10 ff ff ff       	jmp    8048834 <_init+0x30>

08048924 <fflush@plt>:
 8048924:	ff 25 38 c0 04 08    	jmp    *0x804c038
 804892a:	68 70 00 00 00       	push   $0x70
 804892f:	e9 00 ff ff ff       	jmp    8048834 <_init+0x30>

08048934 <socket@plt>:
 8048934:	ff 25 3c c0 04 08    	jmp    *0x804c03c
 804893a:	68 78 00 00 00       	push   $0x78
 804893f:	e9 f0 fe ff ff       	jmp    8048834 <_init+0x30>

08048944 <__ctype_b_loc@plt>:
 8048944:	ff 25 40 c0 04 08    	jmp    *0x804c040
 804894a:	68 80 00 00 00       	push   $0x80
 804894f:	e9 e0 fe ff ff       	jmp    8048834 <_init+0x30>

08048954 <fopen@plt>:
 8048954:	ff 25 44 c0 04 08    	jmp    *0x804c044
 804895a:	68 88 00 00 00       	push   $0x88
 804895f:	e9 d0 fe ff ff       	jmp    8048834 <_init+0x30>

08048964 <alarm@plt>:
 8048964:	ff 25 48 c0 04 08    	jmp    *0x804c048
 804896a:	68 90 00 00 00       	push   $0x90
 804896f:	e9 c0 fe ff ff       	jmp    8048834 <_init+0x30>

08048974 <strcpy@plt>:
 8048974:	ff 25 4c c0 04 08    	jmp    *0x804c04c
 804897a:	68 98 00 00 00       	push   $0x98
 804897f:	e9 b0 fe ff ff       	jmp    8048834 <_init+0x30>

08048984 <strcasecmp@plt>:
 8048984:	ff 25 50 c0 04 08    	jmp    *0x804c050
 804898a:	68 a0 00 00 00       	push   $0xa0
 804898f:	e9 a0 fe ff ff       	jmp    8048834 <_init+0x30>

08048994 <close@plt>:
 8048994:	ff 25 54 c0 04 08    	jmp    *0x804c054
 804899a:	68 a8 00 00 00       	push   $0xa8
 804899f:	e9 90 fe ff ff       	jmp    8048834 <_init+0x30>

080489a4 <__stack_chk_fail@plt>:
 80489a4:	ff 25 58 c0 04 08    	jmp    *0x804c058
 80489aa:	68 b0 00 00 00       	push   $0xb0
 80489af:	e9 80 fe ff ff       	jmp    8048834 <_init+0x30>

080489b4 <gethostname@plt>:
 80489b4:	ff 25 5c c0 04 08    	jmp    *0x804c05c
 80489ba:	68 b8 00 00 00       	push   $0xb8
 80489bf:	e9 70 fe ff ff       	jmp    8048834 <_init+0x30>

080489c4 <sleep@plt>:
 80489c4:	ff 25 60 c0 04 08    	jmp    *0x804c060
 80489ca:	68 c0 00 00 00       	push   $0xc0
 80489cf:	e9 60 fe ff ff       	jmp    8048834 <_init+0x30>

080489d4 <__sprintf_chk@plt>:
 80489d4:	ff 25 64 c0 04 08    	jmp    *0x804c064
 80489da:	68 c8 00 00 00       	push   $0xc8
 80489df:	e9 50 fe ff ff       	jmp    8048834 <_init+0x30>

080489e4 <__memmove_chk@plt>:
 80489e4:	ff 25 68 c0 04 08    	jmp    *0x804c068
 80489ea:	68 d0 00 00 00       	push   $0xd0
 80489ef:	e9 40 fe ff ff       	jmp    8048834 <_init+0x30>

080489f4 <gethostbyname@plt>:
 80489f4:	ff 25 6c c0 04 08    	jmp    *0x804c06c
 80489fa:	68 d8 00 00 00       	push   $0xd8
 80489ff:	e9 30 fe ff ff       	jmp    8048834 <_init+0x30>

08048a04 <exit@plt>:
 8048a04:	ff 25 70 c0 04 08    	jmp    *0x804c070
 8048a0a:	68 e0 00 00 00       	push   $0xe0
 8048a0f:	e9 20 fe ff ff       	jmp    8048834 <_init+0x30>

Disassembly of section .text:

08048a20 <_start>:
 8048a20:	31 ed                	xor    %ebp,%ebp ; ebp = 0
 8048a22:	5e                   	pop    %esi
 8048a23:	89 e1                	mov    %esp,%ecx
 8048a25:	83 e4 f0             	and    $0xfffffff0,%esp
 8048a28:	50                   	push   %eax
 8048a29:	54                   	push   %esp
 8048a2a:	52                   	push   %edx
 8048a2b:	68 60 a2 04 08       	push   $0x804a260
 8048a30:	68 70 a2 04 08       	push   $0x804a270
 8048a35:	51                   	push   %ecx
 8048a36:	56                   	push   %esi
 8048a37:	68 d4 8a 04 08       	push   $0x8048ad4
 8048a3c:	e8 a3 fe ff ff       	call   80488e4 <__libc_start_main@plt>
 8048a41:	f4                   	hlt    
 8048a42:	90                   	nop
 8048a43:	90                   	nop
 8048a44:	90                   	nop
 8048a45:	90                   	nop
 8048a46:	90                   	nop
 8048a47:	90                   	nop
 8048a48:	90                   	nop
 8048a49:	90                   	nop
 8048a4a:	90                   	nop
 8048a4b:	90                   	nop
 8048a4c:	90                   	nop
 8048a4d:	90                   	nop
 8048a4e:	90                   	nop
 8048a4f:	90                   	nop

08048a50 <__do_global_dtors_aux>:
 8048a50:	55                   	push   %ebp
 8048a51:	89 e5                	mov    %esp,%ebp
 8048a53:	53                   	push   %ebx
 8048a54:	83 ec 04             	sub    $0x4,%esp
 8048a57:	80 3d e4 c7 04 08 00 	cmpb   $0x0,0x804c7e4
 8048a5e:	75 3f                	jne    8048a9f <__do_global_dtors_aux+0x4f>
 8048a60:	a1 e8 c7 04 08       	mov    0x804c7e8,%eax
 8048a65:	bb 18 bf 04 08       	mov    $0x804bf18,%ebx
 8048a6a:	81 eb 14 bf 04 08    	sub    $0x804bf14,%ebx
 8048a70:	c1 fb 02             	sar    $0x2,%ebx
 8048a73:	83 eb 01             	sub    $0x1,%ebx
 8048a76:	39 d8                	cmp    %ebx,%eax
 8048a78:	73 1e                	jae    8048a98 <__do_global_dtors_aux+0x48>
 8048a7a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048a80:	83 c0 01             	add    $0x1,%eax
 8048a83:	a3 e8 c7 04 08       	mov    %eax,0x804c7e8
 8048a88:	ff 14 85 14 bf 04 08 	call   *0x804bf14(,%eax,4)
 8048a8f:	a1 e8 c7 04 08       	mov    0x804c7e8,%eax
 8048a94:	39 d8                	cmp    %ebx,%eax
 8048a96:	72 e8                	jb     8048a80 <__do_global_dtors_aux+0x30>
 8048a98:	c6 05 e4 c7 04 08 01 	movb   $0x1,0x804c7e4
 8048a9f:	83 c4 04             	add    $0x4,%esp
 8048aa2:	5b                   	pop    %ebx
 8048aa3:	5d                   	pop    %ebp
 8048aa4:	c3                   	ret    
 8048aa5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048aa9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048ab0 <frame_dummy>:
 8048ab0:	55                   	push   %ebp
 8048ab1:	89 e5                	mov    %esp,%ebp
 8048ab3:	83 ec 18             	sub    $0x18,%esp
 8048ab6:	a1 1c bf 04 08       	mov    0x804bf1c,%eax
 8048abb:	85 c0                	test   %eax,%eax
 8048abd:	74 12                	je     8048ad1 <frame_dummy+0x21>
 8048abf:	b8 00 00 00 00       	mov    $0x0,%eax
 8048ac4:	85 c0                	test   %eax,%eax
 8048ac6:	74 09                	je     8048ad1 <frame_dummy+0x21>
 8048ac8:	c7 04 24 1c bf 04 08 	movl   $0x804bf1c,(%esp)
 8048acf:	ff d0                	call   *%eax
 8048ad1:	c9                   	leave  
 8048ad2:	c3                   	ret    
 8048ad3:	90                   	nop

08048ad4 <main>:
 8048ad4:	55                   	push   %ebp
 8048ad5:	89 e5                	mov    %esp,%ebp
 8048ad7:	83 e4 f0             	and    $0xfffffff0,%esp
 8048ada:	56                   	push   %esi
 8048adb:	53                   	push   %ebx
 8048adc:	83 ec 18             	sub    $0x18,%esp
 8048adf:	8b 45 08             	mov    0x8(%ebp),%eax
 8048ae2:	8b 75 0c             	mov    0xc(%ebp),%esi
 8048ae5:	83 f8 01             	cmp    $0x1,%eax
 8048ae8:	75 0c                	jne    8048af6 <main+0x22>
 8048aea:	a1 c4 c7 04 08       	mov    0x804c7c4,%eax
 8048aef:	a3 f0 c7 04 08       	mov    %eax,0x804c7f0
 8048af4:	eb 75                	jmp    8048b6b <main+0x97>
 8048af6:	83 f8 02             	cmp    $0x2,%eax
 8048af9:	75 4a                	jne    8048b45 <main+0x71>
 8048afb:	8d 5e 04             	lea    0x4(%esi),%ebx
 8048afe:	c7 44 24 04 b4 a9 04 	movl   $0x804a9b4,0x4(%esp)
 8048b05:	08 
 8048b06:	8b 03                	mov    (%ebx),%eax
 8048b08:	89 04 24             	mov    %eax,(%esp)
 8048b0b:	e8 44 fe ff ff       	call   8048954 <fopen@plt>
 8048b10:	a3 f0 c7 04 08       	mov    %eax,0x804c7f0
 8048b15:	85 c0                	test   %eax,%eax
 8048b17:	75 52                	jne    8048b6b <main+0x97>
 8048b19:	8b 03                	mov    (%ebx),%eax
 8048b1b:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048b1f:	8b 06                	mov    (%esi),%eax
 8048b21:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048b25:	c7 44 24 04 28 a3 04 	movl   $0x804a328,0x4(%esp)
 8048b2c:	08 
 8048b2d:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048b34:	e8 6b fd ff ff       	call   80488a4 <__printf_chk@plt>
 8048b39:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048b40:	e8 bf fe ff ff       	call   8048a04 <exit@plt>
 8048b45:	8b 06                	mov    (%esi),%eax
 8048b47:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048b4b:	c7 44 24 04 45 a3 04 	movl   $0x804a345,0x4(%esp)
 8048b52:	08 
 8048b53:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048b5a:	e8 45 fd ff ff       	call   80488a4 <__printf_chk@plt>
 8048b5f:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048b66:	e8 99 fe ff ff       	call   8048a04 <exit@plt>
 8048b6b:	e8 31 0a 00 00       	call   80495a1 <initialize_bomb>
 8048b70:	c7 44 24 04 70 a3 04 	movl   $0x804a370,0x4(%esp)
 8048b77:	08 
 8048b78:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048b7f:	e8 20 fd ff ff       	call   80488a4 <__printf_chk@plt>
 8048b84:	c7 44 24 04 ac a3 04 	movl   $0x804a3ac,0x4(%esp)
 8048b8b:	08 
 8048b8c:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048b93:	e8 0c fd ff ff       	call   80488a4 <__printf_chk@plt>
 8048b98:	e8 cc 08 00 00       	call   8049469 <read_line>
 8048b9d:	89 04 24             	mov    %eax,(%esp)
 8048ba0:	e8 cc 04 00 00       	call   8049071 <phase_1>
 8048ba5:	e8 bc 06 00 00       	call   8049266 <phase_defused>
 8048baa:	c7 44 24 04 dc a3 04 	movl   $0x804a3dc,0x4(%esp)
 8048bb1:	08 
 8048bb2:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048bb9:	e8 e6 fc ff ff       	call   80488a4 <__printf_chk@plt>
 8048bbe:	e8 a6 08 00 00       	call   8049469 <read_line>
 8048bc3:	89 04 24             	mov    %eax,(%esp)
 8048bc6:	e8 d3 02 00 00       	call   8048e9e <phase_2>
 8048bcb:	e8 96 06 00 00       	call   8049266 <phase_defused>
 8048bd0:	c7 44 24 04 08 a4 04 	movl   $0x804a408,0x4(%esp)
 8048bd7:	08 
 8048bd8:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048bdf:	e8 c0 fc ff ff       	call   80488a4 <__printf_chk@plt>
 8048be4:	e8 80 08 00 00       	call   8049469 <read_line>
 8048be9:	89 04 24             	mov    %eax,(%esp)
 8048bec:	e8 c0 03 00 00       	call   8048fb1 <phase_3>
 8048bf1:	e8 70 06 00 00       	call   8049266 <phase_defused>
 8048bf6:	c7 44 24 04 5f a3 04 	movl   $0x804a35f,0x4(%esp)
 8048bfd:	08 
 8048bfe:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048c05:	e8 9a fc ff ff       	call   80488a4 <__printf_chk@plt>
 8048c0a:	e8 5a 08 00 00       	call   8049469 <read_line>
 8048c0f:	89 04 24             	mov    %eax,(%esp)
 8048c12:	e8 2a 03 00 00       	call   8048f41 <phase_4>
 8048c17:	e8 4a 06 00 00       	call   8049266 <phase_defused>
 8048c1c:	c7 44 24 04 28 a4 04 	movl   $0x804a428,0x4(%esp)
 8048c23:	08 
 8048c24:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048c2b:	e8 74 fc ff ff       	call   80488a4 <__printf_chk@plt>
 8048c30:	e8 34 08 00 00       	call   8049469 <read_line>
 8048c35:	89 04 24             	mov    %eax,(%esp)
 8048c38:	e8 b3 02 00 00       	call   8048ef0 <phase_5>
 8048c3d:	e8 24 06 00 00       	call   8049266 <phase_defused>
 8048c42:	c7 44 24 04 50 a4 04 	movl   $0x804a450,0x4(%esp)
 8048c49:	08 
 8048c4a:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048c51:	e8 4e fc ff ff       	call   80488a4 <__printf_chk@plt>
 8048c56:	e8 0e 08 00 00       	call   8049469 <read_line>
 8048c5b:	89 04 24             	mov    %eax,(%esp)
 8048c5e:	e8 42 01 00 00       	call   8048da5 <phase_6>
 8048c63:	e8 fe 05 00 00       	call   8049266 <phase_defused>
 8048c68:	b8 00 00 00 00       	mov    $0x0,%eax
 8048c6d:	83 c4 18             	add    $0x18,%esp
 8048c70:	5b                   	pop    %ebx
 8048c71:	5e                   	pop    %esi
 8048c72:	89 ec                	mov    %ebp,%esp
 8048c74:	5d                   	pop    %ebp
 8048c75:	c3                   	ret    
 8048c76:	90                   	nop
 8048c77:	90                   	nop
 8048c78:	90                   	nop
 8048c79:	90                   	nop
 8048c7a:	90                   	nop
 8048c7b:	90                   	nop
 8048c7c:	90                   	nop
 8048c7d:	90                   	nop
 8048c7e:	90                   	nop
 8048c7f:	90                   	nop

08048c80 <func4>:
 8048c80:	55                   	push   %ebp
 8048c81:	89 e5                	mov    %esp,%ebp        
 8048c83:	83 ec 18             	sub    $0x18,%esp
 8048c86:	89 5d f8             	mov    %ebx,-0x8(%ebp)
 8048c89:	89 75 fc             	mov    %esi,-0x4(%ebp)

 8048c8c:	8b 45 08             	mov    0x8(%ebp),%eax ; eax = x
 8048c8f:	8b 55 0c             	mov    0xc(%ebp),%edx ; edx = a
 8048c92:	8b 75 10             	mov    0x10(%ebp),%esi ; esi = b
 8048c95:	89 f1                	mov    %esi,%ecx
 8048c97:	29 d1                	sub    %edx,%ecx
                                ;; ecx = b - a
 8048c99:	89 cb                	mov    %ecx,%ebx
 8048c9b:	c1 eb 1f             	shr    $0x1f,%ebx
                                ;; r = (b - a) >> 31
 8048c9e:	8d 0c 0b             	lea    (%ebx,%ecx,1),%ecx
                                ;; ecx = ebx + ecx
 8048ca1:	d1 f9                	sar    %ecx
                                ;; ecx = ecx / 2
 8048ca3:	8d 1c 11             	lea    (%ecx,%edx,1),%ebx
                                ;; ebx = ecx + a
 8048ca6:	39 c3                	cmp    %eax,%ebx
 8048ca8:	7e 17                	jle    8048cc1 <func4+0x41>
                                ;; if (ebx > x)
 8048caa:	8d 4b ff             	lea    -0x1(%ebx),%ecx
 8048cad:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 8048cb1:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048cb5:	89 04 24             	mov    %eax,(%esp)
 8048cb8:	e8 c3 ff ff ff       	call   8048c80 <func4>
                                ;; r = func4(x, a, ebx-1)
 8048cbd:	01 c3                	add    %eax,%ebx
 8048cbf:	eb 19                	jmp    8048cda <func4+0x5a>
 8048cc1:	39 c3                	cmp    %eax,%ebx
 8048cc3:	7d 15                	jge    8048cda <func4+0x5a>
                                ;; else if (ebx < x)
 8048cc5:	89 74 24 08          	mov    %esi,0x8(%esp)
 8048cc9:	8d 53 01             	lea    0x1(%ebx),%edx
 8048ccc:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048cd0:	89 04 24             	mov    %eax,(%esp)
 8048cd3:	e8 a8 ff ff ff       	call   8048c80 <func4>
                                ;; r = func4(x, ebx+1, b)
 8048cd8:	01 c3                	add    %eax,%ebx
 8048cda:	89 d8                	mov    %ebx,%eax
                                ;; return (x + r)
 8048cdc:	8b 5d f8             	mov    -0x8(%ebp),%ebx
 8048cdf:	8b 75 fc             	mov    -0x4(%ebp),%esi
 8048ce2:	89 ec                	mov    %ebp,%esp
 8048ce4:	5d                   	pop    %ebp
 8048ce5:	c3                   	ret    

08048ce6 <fun7>:
 8048ce6:	55                   	push   %ebp
 8048ce7:	89 e5                	mov    %esp,%ebp
 8048ce9:	53                   	push   %ebx
 8048cea:	83 ec 14             	sub    $0x14,%esp
        
 8048ced:	8b 55 08             	mov    0x8(%ebp),%edx ;         edx = x
 8048cf0:	8b 4d 0c             	mov    0xc(%ebp),%ecx ;         ecx = y
 8048cf3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax ;       [eax = 0xFFFFFFFF]
 8048cf8:	85 d2                	test   %edx,%edx        ;       if (edx == NULL) => return 0xFFFFFFFF
 8048cfa:	74 35                	je     8048d31 <fun7+0x4b>
 8048cfc:	8b 1a                	mov    (%edx),%ebx ;            ebx = edx->val
 8048cfe:	39 cb                	cmp    %ecx,%ebx   ;            if (ebx <= ecx) => goto       ---
 8048d00:	7e 13                	jle    8048d15 <fun7+0x2f> ;                                    |
 8048d02:	89 4c 24 04          	mov    %ecx,0x4(%esp) ;         y0 = ecx                        |
 8048d06:	8b 42 04             	mov    0x4(%edx),%eax ;                                         |
 8048d09:	89 04 24             	mov    %eax,(%esp) ;            x0 = edx->left                  |
 8048d0c:	e8 d5 ff ff ff       	call   8048ce6 <fun7> ;                                         |
 8048d11:	01 c0                	add    %eax,%eax ;              [eax += eax]                    |
 8048d13:	eb 1c                	jmp    8048d31 <fun7+0x4b> ;    return 2*fun7(x0, y0)           |
 8048d15:	b8 00 00 00 00       	mov    $0x0,%eax ;              [eax = 0]                     <--
 8048d1a:	39 cb                	cmp    %ecx,%ebx ;              if (ebx == ecx) => return 0
 8048d1c:	74 13                	je     8048d31 <fun7+0x4b>
 8048d1e:	89 4c 24 04          	mov    %ecx,0x4(%esp) ;         y0 = ecx
 8048d22:	8b 42 08             	mov    0x8(%edx),%eax
 8048d25:	89 04 24             	mov    %eax,(%esp) ;            x0 = edx->right
 8048d28:	e8 b9 ff ff ff       	call   8048ce6 <fun7> ;        
 8048d2d:	8d 44 00 01          	lea    0x1(%eax,%eax,1),%eax ;  return 2*fun7(x0, y0) + 1
        
 8048d31:	83 c4 14             	add    $0x14,%esp
 8048d34:	5b                   	pop    %ebx
 8048d35:	5d                   	pop    %ebp
 8048d36:	c3                   	ret    

08048d37 <secret_phase>:
 8048d37:	55                   	push   %ebp
 8048d38:	89 e5                	mov    %esp,%ebp
 8048d3a:	53                   	push   %ebx
 8048d3b:	83 ec 14             	sub    $0x14,%esp
 8048d3e:	e8 26 07 00 00       	call   8049469 <read_line>
 8048d43:	c7 44 24 08 0a 00 00 	movl   $0xa,0x8(%esp) ;         base = 10
 8048d4a:	00 
 8048d4b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp) ;         endptr = NULL
 8048d52:	00 
 8048d53:	89 04 24             	mov    %eax,(%esp) ;            str = eax
 8048d56:	e8 b9 fb ff ff       	call   8048914 <strtol@plt> ;   str->long(str, endptr, base)
 8048d5b:	89 c3                	mov    %eax,%ebx ;              ebx = eax
 8048d5d:	8d 40 ff             	lea    -0x1(%eax),%eax ;        eax -= 1
 8048d60:	3d e8 03 00 00       	cmp    $0x3e8,%eax     ;        if (eax > 3640) => explode!
 8048d65:	76 05                	jbe    8048d6c <secret_phase+0x35>
 8048d67:	e8 d5 05 00 00       	call   8049341 <explode_bomb>
 8048d6c:	89 5c 24 04          	mov    %ebx,0x4(%esp) ;         y0 = ebx
 8048d70:	c7 04 24 b0 c5 04 08 	movl   $0x804c5b0,(%esp) ;      x0 = 0x804c5b0
 8048d77:	e8 6a ff ff ff       	call   8048ce6 <fun7>    ;      eax = fun7(x0, y0)
 8048d7c:	83 f8 05             	cmp    $0x5,%eax
 8048d7f:	74 05                	je     8048d86 <secret_phase+0x4f> ; if (eax != 5) => explode!
 8048d81:	e8 bb 05 00 00       	call   8049341 <explode_bomb>
 8048d86:	c7 44 24 04 70 a4 04 	movl   $0x804a470,0x4(%esp)
 8048d8d:	08 
 8048d8e:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048d95:	e8 0a fb ff ff       	call   80488a4 <__printf_chk@plt>
 8048d9a:	e8 c7 04 00 00       	call   8049266 <phase_defused>
 8048d9f:	83 c4 14             	add    $0x14,%esp
 8048da2:	5b                   	pop    %ebx
 8048da3:	5d                   	pop    %ebp
 8048da4:	c3                   	ret    

08048da5 <phase_6>:
 8048da5:	55                   	push   %ebp
 8048da6:	89 e5                	mov    %esp,%ebp
 8048da8:	57                   	push   %edi
 8048da9:	56                   	push   %esi
 8048daa:	53                   	push   %ebx
 8048dab:	83 ec 5c             	sub    $0x5c,%esp
        
 8048dae:	8d 45 d0             	lea    -0x30(%ebp),%eax ;       eax = &(a[0])
 8048db1:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048db5:	8b 45 08             	mov    0x8(%ebp),%eax
 8048db8:	89 04 24             	mov    %eax,(%esp)
 8048dbb:	e8 db 05 00 00       	call   804939b <read_six_numbers>
 8048dc0:	be 00 00 00 00       	mov    $0x0,%esi ;              esi = 0
 8048dc5:	8d 7d d0             	lea    -0x30(%ebp),%edi ;       edi = &(a[0])
        ;; loop1
 8048dc8:	8b 04 b7             	mov    (%edi,%esi,4),%eax ;     eax = a[esi]
 8048dcb:	83 e8 01             	sub    $0x1,%eax          ;     eax--
 8048dce:	83 f8 05             	cmp    $0x5,%eax          ;     if (eax > 5) => explode!       
 8048dd1:	76 05                	jbe    8048dd8 <phase_6+0x33> ; 
 8048dd3:	e8 69 05 00 00       	call   8049341 <explode_bomb>
        ;;   
 8048dd8:	83 c6 01             	add    $0x1,%esi ;              esi++
        ;;   i++
 8048ddb:	83 fe 06             	cmp    $0x6,%esi ;              
 8048dde:	74 22                	je     8048e02 <phase_6+0x5d> ; if (esi == 6) => break
        ;;   if (i == 6) => break
 8048de0:	8d 1c b7             	lea    (%edi,%esi,4),%ebx ;     ebx = &(a[esi])
 8048de3:	89 75 b4             	mov    %esi,-0x4c(%ebp)   ;     x4c = esi
        ;; loop2
 8048de6:	8b 44 b7 fc          	mov    -0x4(%edi,%esi,4),%eax ; eax = a[esi-1]
 8048dea:	3b 03                	cmp    (%ebx),%eax ;            if (eax == *ebx) => explode!
 8048dec:	75 05                	jne    8048df3 <phase_6+0x4e>
 8048dee:	e8 4e 05 00 00       	call   8049341 <explode_bomb>
 8048df3:	83 45 b4 01          	addl   $0x1,-0x4c(%ebp) ;       x4c++
 8048df7:	83 c3 04             	add    $0x4,%ebx        ;       ebx++
 8048dfa:	83 7d b4 05          	cmpl   $0x5,-0x4c(%ebp) ;       if (x4c <= 5) => goto loop2
 8048dfe:	7e e6                	jle    8048de6 <phase_6+0x41>
        
 8048e00:	eb c6                	jmp    8048dc8 <phase_6+0x23> ; goto loop1

 8048e02:	8d 45 d0             	lea    -0x30(%ebp),%eax ;       eax = &(a[0])
 8048e05:	8d 5d e8             	lea    -0x18(%ebp),%ebx ;       ebx = &(a[5])
 8048e08:	b9 07 00 00 00       	mov    $0x7,%ecx        ;       ecx = 7
        ;; while ((a[i] = 7 - a[i]) != X)
 8048e0d:	89 ca                	mov    %ecx,%edx                ; edx = ecx                <--
 8048e0f:	2b 10                	sub    (%eax),%edx              ; edx -= *eax                |
 8048e11:	89 10                	mov    %edx,(%eax)              ; *eax = edx                 |
 8048e13:	83 c0 04             	add    $0x4,%eax                ; eax++                      |
 8048e16:	39 d8                	cmp    %ebx,%eax                ; if (eax != ebx) => goto  ---
 8048e18:	75 f3                	jne    8048e0d <phase_6+0x68>
        ;; setup1
 8048e1a:	bb 00 00 00 00       	mov    $0x0,%ebx                ; ebx = 0
 8048e1f:	8d 7d d0             	lea    -0x30(%ebp),%edi         ; edi = &(a[0])
 8048e22:	eb 16                	jmp    8048e3a <phase_6+0x95>   ; goto                                        ---
        ;; seek                                                                                                         |
 8048e24:	8b 52 08             	mov    0x8(%edx),%edx ;         edx = edx->next               <--               |
 8048e27:	83 c0 01             	add    $0x1,%eax      ;         eax++                           |               |
 8048e2a:	39 c8                	cmp    %ecx,%eax      ;         if (eax != ecx) => goto       ---               |
 8048e2c:	75 f6                	jne    8048e24 <phase_6+0x7f> ;                                 |               |
        ;; write                                                                                        |               |
 8048e2e:	89 54 b5 b8          	mov    %edx,-0x48(%ebp,%esi,4) ;b[esi] = edx                    |      <--      |
 8048e32:	83 c3 01             	add    $0x1,%ebx ;              ebx++                           |        |      |
 8048e35:	83 fb 06             	cmp    $0x6,%ebx ;              if (ebx == 6) => break          |        |      |
 8048e38:	74 16                	je     8048e50 <phase_6+0xab> ;                                 |        |      |
        ;; setup2                                                                                       |        |      |
 8048e3a:	89 de                	mov    %ebx,%esi ;              esi = ebx                       |        |    <--
 8048e3c:	8b 0c 9f             	mov    (%edi,%ebx,4),%ecx ;     ecx = a[ebx]                    |        |        
 8048e3f:	ba fc c4 04 08       	mov    $0x804c4fc,%edx    ;     edx = &(c[0])                   |        |        
 8048e44:	b8 01 00 00 00       	mov    $0x1,%eax          ;     eax = 1                         |        |        
 8048e49:	83 f9 01             	cmp    $0x1,%ecx          ;     if (ecx > 1) => goto seek       |        |        
 8048e4c:	7f d6                	jg     8048e24 <phase_6+0x7f>                                 ---        |        
        ;; finish                                                                                                |                
 8048e4e:	eb de                	jmp    8048e2e <phase_6+0x89> ; goto write                             ---        
        ;; calc:
 8048e50:	8b 5d b8             	mov    -0x48(%ebp),%ebx ;       ebx = b[0]
 8048e53:	8b 45 bc             	mov    -0x44(%ebp),%eax ;       eax = b[1]
 8048e56:	89 43 08             	mov    %eax,0x8(%ebx)   ;       *(ebx+2) = eax
 8048e59:	8b 55 c0             	mov    -0x40(%ebp),%edx ;       edx = b[2]
 8048e5c:	89 50 08             	mov    %edx,0x8(%eax)   ;       *(eax+2) = edx
 8048e5f:	8b 45 c4             	mov    -0x3c(%ebp),%eax ;       eax = b[3]
 8048e62:	89 42 08             	mov    %eax,0x8(%edx)   ;       *(edx+2) = eax
 8048e65:	8b 55 c8             	mov    -0x38(%ebp),%edx ;       edx = b[4]
 8048e68:	89 50 08             	mov    %edx,0x8(%eax)   ;       *(eax+2) = edx
 8048e6b:	8b 45 cc             	mov    -0x34(%ebp),%eax ;       eax = b[5]
 8048e6e:	89 42 08             	mov    %eax,0x8(%edx)   ;       *(edx+2) = eax
 8048e71:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)   ;       *(eax+2) = NULL
 8048e78:	be 00 00 00 00       	mov    $0x0,%esi        ;       esi = 0
 8048e7d:	8b 43 08             	mov    0x8(%ebx),%eax   ;       eax = *(ebx+2)

 8048e80:	8b 13                	mov    (%ebx),%edx ;            edx = *ebx
 8048e82:	3b 10                	cmp    (%eax),%edx ;            if (edx < *eax) => explode!
 8048e84:	7d 05                	jge    8048e8b <phase_6+0xe6>
 8048e86:	e8 b6 04 00 00       	call   8049341 <explode_bomb>

 8048e8b:	8b 5b 08             	mov    0x8(%ebx),%ebx ;         ebx = ebx->next
 8048e8e:	83 c6 01             	add    $0x1,%esi      ;         esi++
 8048e91:	83 fe 05             	cmp    $0x5,%esi      ;         if (esi != 5) repeat
 8048e94:	75 e7                	jne    8048e7d <phase_6+0xd8> ; 
        
 8048e96:	83 c4 5c             	add    $0x5c,%esp
 8048e99:	5b                   	pop    %ebx
 8048e9a:	5e                   	pop    %esi
 8048e9b:	5f                   	pop    %edi
 8048e9c:	5d                   	pop    %ebp
 8048e9d:	c3                   	ret    

08048e9e <phase_2>:
 8048e9e:	55                   	push   %ebp
 8048e9f:	89 e5                	mov    %esp,%ebp
	
 8048ea1:	56                   	push   %esi ; save esi
 8048ea2:	53                   	push   %ebx ; save ebx
	
 8048ea3:	83 ec 30             	sub    $0x30,%esp ; %esp -= 12 (ints)
 8048ea6:	8d 45 e0             	lea    -0x20(%ebp),%eax ; 8 ints below %ebp
 8048ea9:	89 44 24 04          	mov    %eax,0x4(%esp)

 8048ead:	8b 45 08             	mov    0x8(%ebp),%eax ; line read
 8048eb0:	89 04 24             	mov    %eax,(%esp)

 8048eb3:	e8 e3 04 00 00       	call   804939b <read_six_numbers>

 8048eb8:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
 8048ebc:	75 06                	jne    8048ec4 <phase_2+0x26>
 8048ebe:	83 7d e4 01          	cmpl   $0x1,-0x1c(%ebp)
 8048ec2:	74 09                	je     8048ecd <phase_2+0x2f>
 8048ec4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048ec8:	e8 74 04 00 00       	call   8049341 <explode_bomb>
 8048ecd:	8d 5d e8             	lea    -0x18(%ebp),%ebx
 8048ed0:	8d 75 f8             	lea    -0x8(%ebp),%esi

 8048ed3:	8b 43 fc             	mov    -0x4(%ebx),%eax
 8048ed6:	03 43 f8             	add    -0x8(%ebx),%eax
 8048ed9:	39 03                	cmp    %eax,(%ebx)
 8048edb:	74 05                	je     8048ee2 <phase_2+0x44>
 8048edd:	e8 5f 04 00 00       	call   8049341 <explode_bomb>
 8048ee2:	83 c3 04             	add    $0x4,%ebx
 8048ee5:	39 f3                	cmp    %esi,%ebx
 8048ee7:	75 ea                	jne    8048ed3 <phase_2+0x35>

 8048ee9:	83 c4 30             	add    $0x30,%esp

 8048eec:	5b                   	pop    %ebx ; restore ebx
 8048eed:	5e                   	pop    %esi ; restore esi

 8048eee:	5d                   	pop    %ebp
 8048eef:	c3                   	ret    

08048ef0 <phase_5>:
 8048ef0:	55                   	push   %ebp
 8048ef1:	89 e5                	mov    %esp,%ebp
 8048ef3:	57                   	push   %edi
 8048ef4:	56                   	push   %esi
 8048ef5:	53                   	push   %ebx
 8048ef6:	83 ec 1c             	sub    $0x1c,%esp
        
 8048ef9:	8b 5d 08             	mov    0x8(%ebp),%ebx
 8048efc:	89 1c 24             	mov    %ebx,(%esp)
 8048eff:	e8 9c 01 00 00       	call   80490a0 <string_length>
 8048f04:	83 f8 06             	cmp    $0x6,%eax
 8048f07:	74 05                	je     8048f0e <phase_5+0x1e>
 8048f09:	e8 33 04 00 00       	call   8049341 <explode_bomb>
        ;; if (string_length(s) != 6) => explode_bomb
 8048f0e:	ba 00 00 00 00       	mov    $0x0,%edx ; edx = 0
 8048f13:	b8 00 00 00 00       	mov    $0x0,%eax ; eax = 0
 8048f18:	b9 00 a5 04 08       	mov    $0x804a500,%ecx ; ecx = 0x804a500
        
        ;; do {
 8048f1d:	0f be 34 03          	movsbl (%ebx,%eax,1),%esi
        ;; esi = s + eax
 8048f21:	83 e6 0f             	and    $0xf,%esi
        ;; esi = s % 16
 8048f24:	03 14 b1             	add    (%ecx,%esi,4),%edx
        ;; edx += ecx {0x804a500} + (s % 16) * 4
 8048f27:	83 c0 01             	add    $0x1,%eax
        ;; eax++
 8048f2a:	83 f8 06             	cmp    $0x6,%eax
 8048f2d:	75 ee                	jne    8048f1d <phase_5+0x2d>
        ;; } while (eax != 6);
        
 8048f2f:	83 fa 3d             	cmp    $0x3d,%edx
 8048f32:	74 05                	je     8048f39 <phase_5+0x49>
        ;; if (edx != 61) => explode_bomb
 8048f34:	e8 08 04 00 00       	call   8049341 <explode_bomb>
        
 8048f39:	83 c4 1c             	add    $0x1c,%esp
 8048f3c:	5b                   	pop    %ebx
 8048f3d:	5e                   	pop    %esi
 8048f3e:	5f                   	pop    %edi
 8048f3f:	5d                   	pop    %ebp
 8048f40:	c3                   	ret    

08048f41 <phase_4>:
 8048f41:	55                   	push   %ebp
 8048f42:	89 e5                	mov    %esp,%ebp
 8048f44:	83 ec 28             	sub    $0x28,%esp
 8048f47:	8d 45 f0             	lea    -0x10(%ebp),%eax
 8048f4a:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048f4e:	8d 45 f4             	lea    -0xc(%ebp),%eax
 8048f51:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048f55:	c7 44 24 04 ac a5 04 	movl   $0x804a5ac,0x4(%esp)
 8048f5c:	08 
 8048f5d:	8b 45 08             	mov    0x8(%ebp),%eax
 8048f60:	89 04 24             	mov    %eax,(%esp)
 8048f63:	e8 2c f9 ff ff       	call   8048894 <__isoc99_sscanf@plt>
 8048f68:	83 f8 02             	cmp    $0x2,%eax
 8048f6b:	75 0c                	jne    8048f79 <phase_4+0x38>
 8048f6d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048f70:	85 c0                	test   %eax,%eax
 8048f72:	78 05                	js     8048f79 <phase_4+0x38>
                                ; if (x < 0) => explode_bomb    
 8048f74:	83 f8 0e             	cmp    $0xe,%eax
 8048f77:	7e 05                	jle    8048f7e <phase_4+0x3d>
                                ; if (x > 14) => explode bomb
 8048f79:	e8 c3 03 00 00       	call   8049341 <explode_bomb>
 8048f7e:	c7 44 24 08 0e 00 00 	movl   $0xe,0x8(%esp)
 8048f85:	00 
 8048f86:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8048f8d:	00 
 8048f8e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048f91:	89 04 24             	mov    %eax,(%esp)
 8048f94:	e8 e7 fc ff ff       	call   8048c80 <func4>
                                ; z = func4(x, 0, 14)
 8048f99:	83 f8 1f             	cmp    $0x1f,%eax
 8048f9c:	75 06                	jne    8048fa4 <phase_4+0x63>
                                ; if (z != 31) => explode bomb
 8048f9e:	83 7d f0 1f          	cmpl   $0x1f,-0x10(%ebp)
 8048fa2:	74 09                	je     8048fad <phase_4+0x6c>
                                ; if (y != 31) => explode bomb
 8048fa4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048fa8:	e8 94 03 00 00       	call   8049341 <explode_bomb>
 8048fad:	c9                   	leave  
 8048fae:	66 90                	xchg   %ax,%ax
 8048fb0:	c3                   	ret    

08048fb1 <phase_3>:
 8048fb1:	55                   	push   %ebp
 8048fb2:	89 e5                	mov    %esp,%ebp

 8048fb4:	83 ec 28             	sub    $0x28,%esp
 8048fb7:	8d 45 f0             	lea    -0x10(%ebp),%eax
 8048fba:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048fbe:	8d 45 f4             	lea    -0xc(%ebp),%eax
 8048fc1:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048fc5:	c7 44 24 04 ac a5 04 	movl   $0x804a5ac,0x4(%esp)
 8048fcc:	08 
 8048fcd:	8b 45 08             	mov    0x8(%ebp),%eax
 8048fd0:	89 04 24             	mov    %eax,(%esp)
 8048fd3:	e8 bc f8 ff ff       	call   8048894 <__isoc99_sscanf@plt>
 8048fd8:	83 f8 01             	cmp    $0x1,%eax
 8048fdb:	7f 05                	jg     8048fe2 <phase_3+0x31>
                                ; if (eax <= 1) => explode_bomb
 8048fdd:	e8 5f 03 00 00       	call   8049341 <explode_bomb>
 8048fe2:	83 7d f4 07          	cmpl   $0x7,-0xc(%ebp)
 8048fe6:	77 6b                	ja     8049053 <phase_3+0xa2>
                                ; if (x > 7) => explode bomb    
 8048fe8:	8b 45 f4             	mov    -0xc(%ebp),%eax
                                ; eax = x
 8048feb:	ff 24 85 e0 a4 04 08 	jmp    *0x804a4e0(,%eax,4)
				; (jmp x * 4 + 0x8049022)
 8048ff2:	b8 00 00 00 00       	mov    $0x0,%eax

 8048ff7:	eb 53                	jmp    804904c <phase_3+0x9b> ; -= 687
 8048ff9:	b8 00 00 00 00       	mov    $0x0,%eax
 8048ffe:	66 90                	xchg   %ax,%ax
 8049000:	eb 45                	jmp    8049047 <phase_3+0x96> ; += 0
 8049002:	b8 00 00 00 00       	mov    $0x0,%eax
 8049007:	eb 39                	jmp    8049042 <phase_3+0x91> ; += 687
 8049009:	b8 00 00 00 00       	mov    $0x0,%eax
 804900e:	66 90                	xchg   %ax,%ax
 8049010:	eb 2b                	jmp    804903d <phase_3+0x8c> ; += 0
 8049012:	b8 00 00 00 00       	mov    $0x0,%eax
 8049017:	eb 1f                	jmp    8049038 <phase_3+0x87> ; -= 687
 8049019:	b8 00 00 00 00       	mov    $0x0,%eax
 804901e:	66 90                	xchg   %ax,%ax
 8049020:	eb 11                	jmp    8049033 <phase_3+0x82> ; -= 61
 8049022:	b8 2a 02 00 00       	mov    $0x22a,%eax ; 554
 8049027:	eb 05                	jmp    804902e <phase_3+0x7d> ; -= 400
 8049029:	b8 00 00 00 00       	mov    $0x0,%eax

 804902e:	2d 53 01 00 00       	sub    $0x153,%eax ; 339
 8049033:	05 72 02 00 00       	add    $0x272,%eax ; 626

 8049038:	2d af 02 00 00       	sub    $0x2af,%eax ; 687
 804903d:	05 af 02 00 00       	add    $0x2af,%eax ; 687

 8049042:	2d af 02 00 00       	sub    $0x2af,%eax ; 687
 8049047:	05 af 02 00 00       	add    $0x2af,%eax ; 687

 804904c:	2d af 02 00 00       	sub    $0x2af,%eax ; 687

 8049051:	eb 0a                	jmp    804905d <phase_3+0xac>
 8049053:	e8 e9 02 00 00       	call   8049341 <explode_bomb>
 8049058:	b8 00 00 00 00       	mov    $0x0,%eax

 804905d:	83 7d f4 05          	cmpl   $0x5,-0xc(%ebp)
 8049061:	7f 05                	jg     8049068 <phase_3+0xb7>
                                ; if (x > 5) => explode
 8049063:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 8049066:	74 05                	je     804906d <phase_3+0xbc>
                                ; if (eax != y) => explode
 8049068:	e8 d4 02 00 00       	call   8049341 <explode_bomb>
 804906d:	c9                   	leave  
 804906e:	66 90                	xchg   %ax,%ax
 8049070:	c3                   	ret    

08049071 <phase_1>:
 8049071:	55                   	push   %ebp
 8049072:	89 e5                	mov    %esp,%ebp
 8049074:	83 ec 18             	sub    $0x18,%esp
 8049077:	c7 44 24 04 98 a4 04 	movl   $0x804a498,0x4(%esp)
 804907e:	08 
 804907f:	8b 45 08             	mov    0x8(%ebp),%eax
 8049082:	89 04 24             	mov    %eax,(%esp)
 8049085:	e8 31 00 00 00       	call   80490bb <strings_not_equal>
 804908a:	85 c0                	test   %eax,%eax
 804908c:	74 05                	je     8049093 <phase_1+0x22>
 804908e:	e8 ae 02 00 00       	call   8049341 <explode_bomb>
 8049093:	c9                   	leave  
 8049094:	c3                   	ret    
 8049095:	90                   	nop
 8049096:	90                   	nop
 8049097:	90                   	nop
 8049098:	90                   	nop
 8049099:	90                   	nop
 804909a:	90                   	nop
 804909b:	90                   	nop
 804909c:	90                   	nop
 804909d:	90                   	nop
 804909e:	90                   	nop
 804909f:	90                   	nop

080490a0 <string_length>:
 80490a0:	55                   	push   %ebp
 80490a1:	89 e5                	mov    %esp,%ebp
 80490a3:	8b 55 08             	mov    0x8(%ebp),%edx
 80490a6:	b8 00 00 00 00       	mov    $0x0,%eax
 80490ab:	80 3a 00             	cmpb   $0x0,(%edx)
 80490ae:	74 09                	je     80490b9 <string_length+0x19>
 80490b0:	83 c0 01             	add    $0x1,%eax
 80490b3:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
 80490b7:	75 f7                	jne    80490b0 <string_length+0x10>
 80490b9:	5d                   	pop    %ebp
 80490ba:	c3                   	ret    

080490bb <strings_not_equal>:
 80490bb:	55                   	push   %ebp
 80490bc:	89 e5                	mov    %esp,%ebp
 80490be:	57                   	push   %edi
 80490bf:	56                   	push   %esi
 80490c0:	53                   	push   %ebx
 80490c1:	83 ec 04             	sub    $0x4,%esp
 80490c4:	8b 5d 08             	mov    0x8(%ebp),%ebx
 80490c7:	8b 75 0c             	mov    0xc(%ebp),%esi
 80490ca:	89 1c 24             	mov    %ebx,(%esp)
 80490cd:	e8 ce ff ff ff       	call   80490a0 <string_length>
 80490d2:	89 c7                	mov    %eax,%edi
 80490d4:	89 34 24             	mov    %esi,(%esp)
 80490d7:	e8 c4 ff ff ff       	call   80490a0 <string_length>
 80490dc:	39 c7                	cmp    %eax,%edi
 80490de:	75 29                	jne    8049109 <strings_not_equal+0x4e>
 80490e0:	0f b6 13             	movzbl (%ebx),%edx
 80490e3:	84 d2                	test   %dl,%dl
 80490e5:	74 2b                	je     8049112 <strings_not_equal+0x57>
 80490e7:	b8 00 00 00 00       	mov    $0x0,%eax
 80490ec:	3a 16                	cmp    (%esi),%dl
 80490ee:	74 0e                	je     80490fe <strings_not_equal+0x43>
 80490f0:	eb 17                	jmp    8049109 <strings_not_equal+0x4e>
 80490f2:	0f b6 4c 06 01       	movzbl 0x1(%esi,%eax,1),%ecx
 80490f7:	83 c0 01             	add    $0x1,%eax
 80490fa:	38 ca                	cmp    %cl,%dl
 80490fc:	75 0b                	jne    8049109 <strings_not_equal+0x4e>
 80490fe:	0f b6 54 03 01       	movzbl 0x1(%ebx,%eax,1),%edx
 8049103:	84 d2                	test   %dl,%dl
 8049105:	75 eb                	jne    80490f2 <strings_not_equal+0x37>
 8049107:	eb 09                	jmp    8049112 <strings_not_equal+0x57>
 8049109:	b8 01 00 00 00       	mov    $0x1,%eax
 804910e:	66 90                	xchg   %ax,%ax
 8049110:	eb 05                	jmp    8049117 <strings_not_equal+0x5c>
 8049112:	b8 00 00 00 00       	mov    $0x0,%eax
 8049117:	83 c4 04             	add    $0x4,%esp
 804911a:	5b                   	pop    %ebx
 804911b:	5e                   	pop    %esi
 804911c:	5f                   	pop    %edi
 804911d:	5d                   	pop    %ebp
 804911e:	c3                   	ret    

0804911f <initialize_bomb_solve>:
 804911f:	55                   	push   %ebp
 8049120:	89 e5                	mov    %esp,%ebp
 8049122:	5d                   	pop    %ebp
 8049123:	c3                   	ret    

08049124 <invalid_phase>:
 8049124:	55                   	push   %ebp
 8049125:	89 e5                	mov    %esp,%ebp
 8049127:	83 ec 18             	sub    $0x18,%esp
 804912a:	8b 45 08             	mov    0x8(%ebp),%eax
 804912d:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049131:	c7 44 24 04 40 a5 04 	movl   $0x804a540,0x4(%esp)
 8049138:	08 
 8049139:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049140:	e8 5f f7 ff ff       	call   80488a4 <__printf_chk@plt>
 8049145:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 804914c:	e8 b3 f8 ff ff       	call   8048a04 <exit@plt>

08049151 <send_msg>:
 8049151:	55                   	push   %ebp
 8049152:	89 e5                	mov    %esp,%ebp
 8049154:	57                   	push   %edi
 8049155:	53                   	push   %ebx
 8049156:	81 ec 30 40 00 00    	sub    $0x4030,%esp
 804915c:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049162:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049165:	31 c0                	xor    %eax,%eax
 8049167:	8b 15 ec c7 04 08    	mov    0x804c7ec,%edx
 804916d:	8d 5c 92 fb          	lea    -0x5(%edx,%edx,4),%ebx
 8049171:	c1 e3 04             	shl    $0x4,%ebx
 8049174:	81 c3 00 c8 04 08    	add    $0x804c800,%ebx
 804917a:	89 df                	mov    %ebx,%edi
 804917c:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049181:	f2 ae                	repnz scas %es:(%edi),%al
 8049183:	f7 d1                	not    %ecx
 8049185:	83 c1 63             	add    $0x63,%ecx
 8049188:	81 f9 00 20 00 00    	cmp    $0x2000,%ecx
 804918e:	76 20                	jbe    80491b0 <send_msg+0x5f>
 8049190:	c7 44 24 04 84 aa 04 	movl   $0x804aa84,0x4(%esp)
 8049197:	08 
 8049198:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804919f:	e8 00 f7 ff ff       	call   80488a4 <__printf_chk@plt>
 80491a4:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80491ab:	e8 54 f8 ff ff       	call   8048a04 <exit@plt>
 80491b0:	b8 5a a5 04 08       	mov    $0x804a55a,%eax
 80491b5:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 80491b9:	75 05                	jne    80491c0 <send_msg+0x6f>
 80491bb:	b8 51 a5 04 08       	mov    $0x804a551,%eax
 80491c0:	89 5c 24 1c          	mov    %ebx,0x1c(%esp)
 80491c4:	89 54 24 18          	mov    %edx,0x18(%esp)
 80491c8:	89 44 24 14          	mov    %eax,0x14(%esp)
 80491cc:	a1 a0 c0 04 08       	mov    0x804c0a0,%eax
 80491d1:	89 44 24 10          	mov    %eax,0x10(%esp)
 80491d5:	c7 44 24 0c 62 a5 04 	movl   $0x804a562,0xc(%esp)
 80491dc:	08 
 80491dd:	c7 44 24 08 00 20 00 	movl   $0x2000,0x8(%esp)
 80491e4:	00 
 80491e5:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 80491ec:	00 
 80491ed:	8d 9d f4 df ff ff    	lea    -0x200c(%ebp),%ebx
 80491f3:	89 1c 24             	mov    %ebx,(%esp)
 80491f6:	e8 d9 f7 ff ff       	call   80489d4 <__sprintf_chk@plt>
 80491fb:	8d 85 f4 bf ff ff    	lea    -0x400c(%ebp),%eax
 8049201:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049205:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 804920c:	00 
 804920d:	89 5c 24 04          	mov    %ebx,0x4(%esp)
 8049211:	c7 04 24 c0 c0 04 08 	movl   $0x804c0c0,(%esp)
 8049218:	e8 b6 0f 00 00       	call   804a1d3 <driver_post>
 804921d:	85 c0                	test   %eax,%eax
 804921f:	79 2a                	jns    804924b <send_msg+0xfa>
 8049221:	8d 85 f4 bf ff ff    	lea    -0x400c(%ebp),%eax
 8049227:	89 44 24 08          	mov    %eax,0x8(%esp)
 804922b:	c7 44 24 04 ef a5 04 	movl   $0x804a5ef,0x4(%esp)
 8049232:	08 
 8049233:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804923a:	e8 65 f6 ff ff       	call   80488a4 <__printf_chk@plt>
 804923f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8049246:	e8 b9 f7 ff ff       	call   8048a04 <exit@plt>
 804924b:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804924e:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8049255:	74 05                	je     804925c <send_msg+0x10b>
 8049257:	e8 48 f7 ff ff       	call   80489a4 <__stack_chk_fail@plt>
 804925c:	81 c4 30 40 00 00    	add    $0x4030,%esp
 8049262:	5b                   	pop    %ebx
 8049263:	5f                   	pop    %edi
 8049264:	5d                   	pop    %ebp
 8049265:	c3                   	ret    

08049266 <phase_defused>:
 8049266:	55                   	push   %ebp
 8049267:	89 e5                	mov    %esp,%ebp
        
 8049269:	81 ec 88 00 00 00    	sub    $0x88,%esp
 804926f:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049275:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049278:	31 c0                	xor    %eax,%eax
 804927a:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049281:	e8 cb fe ff ff       	call   8049151 <send_msg>
 8049286:	83 3d ec c7 04 08 06 	cmpl   $0x6,0x804c7ec
 804928d:	0f 85 9a 00 00 00    	jne    804932d <phase_defused+0xc7>

 8049293:	8d 45 a4             	lea    -0x5c(%ebp),%eax
 8049296:	89 44 24 10          	mov    %eax,0x10(%esp)
 804929a:	8d 45 9c             	lea    -0x64(%ebp),%eax
 804929d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80492a1:	8d 45 a0             	lea    -0x60(%ebp),%eax
 80492a4:	89 44 24 08          	mov    %eax,0x8(%esp)
 80492a8:	c7 44 24 04 6e a5 04 	movl   $0x804a56e,0x4(%esp) ;           "%d %d %s"
 80492af:	08 
 80492b0:	c7 04 24 f0 c8 04 08 	movl   $0x804c8f0,(%esp) ;              "13 31"
 80492b7:	e8 d8 f5 ff ff       	call   8048894 <__isoc99_sscanf@plt>
 80492bc:	83 f8 03             	cmp    $0x3,%eax ;                      if (eax != 3) => 404!
 80492bf:	75 44                	jne    8049305 <phase_defused+0x9f> 
 80492c1:	c7 44 24 04 77 a5 04 	movl   $0x804a577,0x4(%esp) ;           "DrEvil"
 80492c8:	08 
 80492c9:	8d 45 a4             	lea    -0x5c(%ebp),%eax
 80492cc:	89 04 24             	mov    %eax,(%esp)
 80492cf:	e8 e7 fd ff ff       	call   80490bb <strings_not_equal>
 80492d4:	85 c0                	test   %eax,%eax
 80492d6:	75 2d                	jne    8049305 <phase_defused+0x9f> ;   if (s != "DrEvil")
 80492d8:	c7 44 24 04 a8 aa 04 	movl   $0x804aaa8,0x4(%esp) ; "Curses, you've found the secret phase!"
 80492df:	08 
 80492e0:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80492e7:	e8 b8 f5 ff ff       	call   80488a4 <__printf_chk@plt>
 80492ec:	c7 44 24 04 d0 aa 04 	movl   $0x804aad0,0x4(%esp) ; "But finding it and solving it are quite different..."
 80492f3:	08 
 80492f4:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80492fb:	e8 a4 f5 ff ff       	call   80488a4 <__printf_chk@plt>
 8049300:	e8 32 fa ff ff       	call   8048d37 <secret_phase>
 8049305:	c7 44 24 04 08 ab 04 	movl   $0x804ab08,0x4(%esp) ;           "Congratulations! You've defused the bomb!"
 804930c:	08 
 804930d:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049314:	e8 8b f5 ff ff       	call   80488a4 <__printf_chk@plt>
 8049319:	c7 44 24 04 34 ab 04 	movl   $0x804ab34,0x4(%esp)
 8049320:	08 
 8049321:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049328:	e8 77 f5 ff ff       	call   80488a4 <__printf_chk@plt>
 804932d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049330:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8049337:	74 05                	je     804933e <phase_defused+0xd8>
 8049339:	e8 66 f6 ff ff       	call   80489a4 <__stack_chk_fail@plt>
 804933e:	c9                   	leave  
 804933f:	90                   	nop
 8049340:	c3                   	ret    

08049341 <explode_bomb>:
 8049341:	55                   	push   %ebp
 8049342:	89 e5                	mov    %esp,%ebp
 8049344:	83 ec 18             	sub    $0x18,%esp
 8049347:	c7 44 24 04 7e a5 04 	movl   $0x804a57e,0x4(%esp)
 804934e:	08 
 804934f:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049356:	e8 49 f5 ff ff       	call   80488a4 <__printf_chk@plt>
 804935b:	c7 44 24 04 88 a5 04 	movl   $0x804a588,0x4(%esp)
 8049362:	08 
 8049363:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804936a:	e8 35 f5 ff ff       	call   80488a4 <__printf_chk@plt>
 804936f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8049376:	e8 d6 fd ff ff       	call   8049151 <send_msg>
 804937b:	c7 44 24 04 78 ab 04 	movl   $0x804ab78,0x4(%esp)
 8049382:	08 
 8049383:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804938a:	e8 15 f5 ff ff       	call   80488a4 <__printf_chk@plt>
 804938f:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049396:	e8 69 f6 ff ff       	call   8048a04 <exit@plt>

0804939b <read_six_numbers>:
 804939b:	55                   	push   %ebp
 804939c:	89 e5                	mov    %esp,%ebp
	
 804939e:	83 ec 28             	sub    $0x28,%esp ; esp -= 10 (ints)
 80493a1:	8b 45 0c             	mov    0xc(%ebp),%eax ; output location
;;; calculate output locations
 80493a4:	8d 50 14             	lea    0x14(%eax),%edx ; index 0
 80493a7:	89 54 24 1c          	mov    %edx,0x1c(%esp)
 80493ab:	8d 50 10             	lea    0x10(%eax),%edx ; index 1
 80493ae:	89 54 24 18          	mov    %edx,0x18(%esp)
 80493b2:	8d 50 0c             	lea    0xc(%eax),%edx ; index 2
 80493b5:	89 54 24 14          	mov    %edx,0x14(%esp)
 80493b9:	8d 50 08             	lea    0x8(%eax),%edx ; index 3
 80493bc:	89 54 24 10          	mov    %edx,0x10(%esp)
 80493c0:	8d 50 04             	lea    0x4(%eax),%edx ; index 4
 80493c3:	89 54 24 0c          	mov    %edx,0xc(%esp)
 80493c7:	89 44 24 08          	mov    %eax,0x8(%esp) ; index 5
 80493cb:	c7 44 24 04 a0 a5 04 	movl   $0x804a5a0,0x4(%esp) ; format string
	
 80493d2:	08 
 80493d3:	8b 45 08             	mov    0x8(%ebp),%eax ; line read
 80493d6:	89 04 24             	mov    %eax,(%esp)
 80493d9:	e8 b6 f4 ff ff       	call   8048894 <__isoc99_sscanf@plt>
 80493de:	83 f8 05             	cmp    $0x5,%eax
 80493e1:	7f 05                	jg     80493e8 <read_six_numbers+0x4d>
 80493e3:	e8 59 ff ff ff       	call   8049341 <explode_bomb>
 80493e8:	c9                   	leave  
 80493e9:	c3                   	ret    

080493ea <blank_line>:
 80493ea:	55                   	push   %ebp
 80493eb:	89 e5                	mov    %esp,%ebp
 80493ed:	56                   	push   %esi
 80493ee:	53                   	push   %ebx
 80493ef:	8b 75 08             	mov    0x8(%ebp),%esi
 80493f2:	eb 1b                	jmp    804940f <blank_line+0x25>
 80493f4:	e8 4b f5 ff ff       	call   8048944 <__ctype_b_loc@plt>
 80493f9:	0f be db             	movsbl %bl,%ebx
 80493fc:	8b 00                	mov    (%eax),%eax
 80493fe:	f6 44 58 01 20       	testb  $0x20,0x1(%eax,%ebx,2)
 8049403:	75 07                	jne    804940c <blank_line+0x22>
 8049405:	b8 00 00 00 00       	mov    $0x0,%eax
 804940a:	eb 0f                	jmp    804941b <blank_line+0x31>
 804940c:	83 c6 01             	add    $0x1,%esi
 804940f:	0f b6 1e             	movzbl (%esi),%ebx
 8049412:	84 db                	test   %bl,%bl
 8049414:	75 de                	jne    80493f4 <blank_line+0xa>
 8049416:	b8 01 00 00 00       	mov    $0x1,%eax
 804941b:	5b                   	pop    %ebx
 804941c:	5e                   	pop    %esi
 804941d:	5d                   	pop    %ebp
 804941e:	c3                   	ret    

0804941f <skip>:
 804941f:	55                   	push   %ebp
 8049420:	89 e5                	mov    %esp,%ebp
 8049422:	53                   	push   %ebx
 8049423:	83 ec 14             	sub    $0x14,%esp
 8049426:	a1 f0 c7 04 08       	mov    0x804c7f0,%eax
 804942b:	89 44 24 08          	mov    %eax,0x8(%esp)
 804942f:	c7 44 24 04 50 00 00 	movl   $0x50,0x4(%esp)
 8049436:	00 
 8049437:	a1 ec c7 04 08       	mov    0x804c7ec,%eax
 804943c:	8d 04 80             	lea    (%eax,%eax,4),%eax
 804943f:	c1 e0 04             	shl    $0x4,%eax
 8049442:	05 00 c8 04 08       	add    $0x804c800,%eax
 8049447:	89 04 24             	mov    %eax,(%esp)
 804944a:	e8 85 f4 ff ff       	call   80488d4 <fgets@plt>
 804944f:	89 c3                	mov    %eax,%ebx
 8049451:	85 c0                	test   %eax,%eax
 8049453:	74 0c                	je     8049461 <skip+0x42>
 8049455:	89 04 24             	mov    %eax,(%esp)
 8049458:	e8 8d ff ff ff       	call   80493ea <blank_line>
 804945d:	85 c0                	test   %eax,%eax
 804945f:	75 c5                	jne    8049426 <skip+0x7>
 8049461:	89 d8                	mov    %ebx,%eax
 8049463:	83 c4 14             	add    $0x14,%esp
 8049466:	5b                   	pop    %ebx
 8049467:	5d                   	pop    %ebp
 8049468:	c3                   	ret    

08049469 <read_line>:
 8049469:	55                   	push   %ebp
 804946a:	89 e5                	mov    %esp,%ebp
 804946c:	83 ec 28             	sub    $0x28,%esp
 804946f:	89 5d f4             	mov    %ebx,-0xc(%ebp)
 8049472:	89 75 f8             	mov    %esi,-0x8(%ebp)
 8049475:	89 7d fc             	mov    %edi,-0x4(%ebp)
 8049478:	e8 a2 ff ff ff       	call   804941f <skip>
 804947d:	85 c0                	test   %eax,%eax
 804947f:	75 7c                	jne    80494fd <read_line+0x94>
 8049481:	a1 f0 c7 04 08       	mov    0x804c7f0,%eax
 8049486:	3b 05 c4 c7 04 08    	cmp    0x804c7c4,%eax
 804948c:	75 20                	jne    80494ae <read_line+0x45>
 804948e:	c7 44 24 04 9c ab 04 	movl   $0x804ab9c,0x4(%esp)
 8049495:	08 
 8049496:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804949d:	e8 02 f4 ff ff       	call   80488a4 <__printf_chk@plt>
 80494a2:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80494a9:	e8 56 f5 ff ff       	call   8048a04 <exit@plt>
 80494ae:	c7 04 24 b2 a5 04 08 	movl   $0x804a5b2,(%esp)
 80494b5:	e8 fa f3 ff ff       	call   80488b4 <getenv@plt>
 80494ba:	85 c0                	test   %eax,%eax
 80494bc:	74 0c                	je     80494ca <read_line+0x61>
 80494be:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80494c5:	e8 3a f5 ff ff       	call   8048a04 <exit@plt>
 80494ca:	a1 c4 c7 04 08       	mov    0x804c7c4,%eax
 80494cf:	a3 f0 c7 04 08       	mov    %eax,0x804c7f0
 80494d4:	e8 46 ff ff ff       	call   804941f <skip>
 80494d9:	85 c0                	test   %eax,%eax
 80494db:	75 20                	jne    80494fd <read_line+0x94>
 80494dd:	c7 44 24 04 9c ab 04 	movl   $0x804ab9c,0x4(%esp)
 80494e4:	08 
 80494e5:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80494ec:	e8 b3 f3 ff ff       	call   80488a4 <__printf_chk@plt>
 80494f1:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80494f8:	e8 07 f5 ff ff       	call   8048a04 <exit@plt>
 80494fd:	be 00 c8 04 08       	mov    $0x804c800,%esi
 8049502:	a1 ec c7 04 08       	mov    0x804c7ec,%eax
 8049507:	8d 04 80             	lea    (%eax,%eax,4),%eax
 804950a:	c1 e0 04             	shl    $0x4,%eax
 804950d:	8d b8 00 c8 04 08    	lea    0x804c800(%eax),%edi
 8049513:	b8 00 00 00 00       	mov    $0x0,%eax
 8049518:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 804951d:	f2 ae                	repnz scas %es:(%edi),%al
 804951f:	f7 d1                	not    %ecx
 8049521:	8d 59 ff             	lea    -0x1(%ecx),%ebx
 8049524:	83 fb 4e             	cmp    $0x4e,%ebx
 8049527:	7e 4b                	jle    8049574 <read_line+0x10b>
 8049529:	c7 44 24 04 bd a5 04 	movl   $0x804a5bd,0x4(%esp)
 8049530:	08 
 8049531:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049538:	e8 67 f3 ff ff       	call   80488a4 <__printf_chk@plt>
 804953d:	a1 ec c7 04 08       	mov    0x804c7ec,%eax
 8049542:	8d 50 01             	lea    0x1(%eax),%edx
 8049545:	89 15 ec c7 04 08    	mov    %edx,0x804c7ec
 804954b:	8d 04 80             	lea    (%eax,%eax,4),%eax
 804954e:	c1 e0 04             	shl    $0x4,%eax
 8049551:	8d 04 06             	lea    (%esi,%eax,1),%eax
 8049554:	c7 00 2a 2a 2a 74    	movl   $0x742a2a2a,(%eax)
 804955a:	c7 40 04 72 75 6e 63 	movl   $0x636e7572,0x4(%eax)
 8049561:	c7 40 08 61 74 65 64 	movl   $0x64657461,0x8(%eax)
 8049568:	c7 40 0c 2a 2a 2a 00 	movl   $0x2a2a2a,0xc(%eax)
 804956f:	e8 cd fd ff ff       	call   8049341 <explode_bomb>
 8049574:	8b 15 ec c7 04 08    	mov    0x804c7ec,%edx
 804957a:	8d 04 92             	lea    (%edx,%edx,4),%eax
 804957d:	c1 e0 04             	shl    $0x4,%eax
 8049580:	c6 84 03 ff c7 04 08 	movb   $0x0,0x804c7ff(%ebx,%eax,1)
 8049587:	00 
 8049588:	83 c2 01             	add    $0x1,%edx
 804958b:	89 15 ec c7 04 08    	mov    %edx,0x804c7ec
 8049591:	8d 04 06             	lea    (%esi,%eax,1),%eax
 8049594:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 8049597:	8b 75 f8             	mov    -0x8(%ebp),%esi
 804959a:	8b 7d fc             	mov    -0x4(%ebp),%edi
 804959d:	89 ec                	mov    %ebp,%esp
 804959f:	5d                   	pop    %ebp
 80495a0:	c3                   	ret    

080495a1 <initialize_bomb>:
 80495a1:	55                   	push   %ebp
 80495a2:	89 e5                	mov    %esp,%ebp
 80495a4:	57                   	push   %edi
 80495a5:	56                   	push   %esi
 80495a6:	53                   	push   %ebx
 80495a7:	81 ec 6c 20 00 00    	sub    $0x206c,%esp
 80495ad:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80495b3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80495b6:	31 c0                	xor    %eax,%eax
 80495b8:	c7 44 24 04 af 96 04 	movl   $0x80496af,0x4(%esp)
 80495bf:	08 
 80495c0:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
 80495c7:	e8 a8 f2 ff ff       	call   8048874 <signal@plt>
 80495cc:	c7 44 24 04 40 00 00 	movl   $0x40,0x4(%esp)
 80495d3:	00 
 80495d4:	8d 45 a4             	lea    -0x5c(%ebp),%eax
 80495d7:	89 04 24             	mov    %eax,(%esp)
 80495da:	e8 d5 f3 ff ff       	call   80489b4 <gethostname@plt>
 80495df:	85 c0                	test   %eax,%eax
 80495e1:	75 18                	jne    80495fb <initialize_bomb+0x5a>
 80495e3:	a1 c0 c5 04 08       	mov    0x804c5c0,%eax
 80495e8:	bb 00 00 00 00       	mov    $0x0,%ebx
 80495ed:	8d 75 a4             	lea    -0x5c(%ebp),%esi
 80495f0:	bf c0 c5 04 08       	mov    $0x804c5c0,%edi
 80495f5:	85 c0                	test   %eax,%eax
 80495f7:	75 22                	jne    804961b <initialize_bomb+0x7a>
 80495f9:	eb 78                	jmp    8049673 <initialize_bomb+0xd2>
 80495fb:	c7 44 24 04 bc ab 04 	movl   $0x804abbc,0x4(%esp)
 8049602:	08 
 8049603:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804960a:	e8 95 f2 ff ff       	call   80488a4 <__printf_chk@plt>
 804960f:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049616:	e8 e9 f3 ff ff       	call   8048a04 <exit@plt>
 804961b:	89 74 24 04          	mov    %esi,0x4(%esp)
 804961f:	89 04 24             	mov    %eax,(%esp)
 8049622:	e8 5d f3 ff ff       	call   8048984 <strcasecmp@plt>
 8049627:	85 c0                	test   %eax,%eax
 8049629:	74 0c                	je     8049637 <initialize_bomb+0x96>
 804962b:	83 c3 01             	add    $0x1,%ebx
 804962e:	8b 04 9f             	mov    (%edi,%ebx,4),%eax
 8049631:	85 c0                	test   %eax,%eax
 8049633:	75 e6                	jne    804961b <initialize_bomb+0x7a>
 8049635:	eb 3c                	jmp    8049673 <initialize_bomb+0xd2>
 8049637:	8d 85 a4 df ff ff    	lea    -0x205c(%ebp),%eax
 804963d:	89 04 24             	mov    %eax,(%esp)
 8049640:	e8 76 02 00 00       	call   80498bb <init_driver>
 8049645:	85 c0                	test   %eax,%eax
 8049647:	79 4a                	jns    8049693 <initialize_bomb+0xf2>
 8049649:	8d 85 a4 df ff ff    	lea    -0x205c(%ebp),%eax
 804964f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049653:	c7 44 24 04 d9 a5 04 	movl   $0x804a5d9,0x4(%esp)
 804965a:	08 
 804965b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049662:	e8 3d f2 ff ff       	call   80488a4 <__printf_chk@plt>
 8049667:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 804966e:	e8 91 f3 ff ff       	call   8048a04 <exit@plt>
 8049673:	c7 44 24 04 f4 ab 04 	movl   $0x804abf4,0x4(%esp)
 804967a:	08 
 804967b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049682:	e8 1d f2 ff ff       	call   80488a4 <__printf_chk@plt>
 8049687:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 804968e:	e8 71 f3 ff ff       	call   8048a04 <exit@plt>
 8049693:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8049696:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 804969d:	74 05                	je     80496a4 <initialize_bomb+0x103>
 804969f:	e8 00 f3 ff ff       	call   80489a4 <__stack_chk_fail@plt>
 80496a4:	81 c4 6c 20 00 00    	add    $0x206c,%esp
 80496aa:	5b                   	pop    %ebx
 80496ab:	5e                   	pop    %esi
 80496ac:	5f                   	pop    %edi
 80496ad:	5d                   	pop    %ebp
 80496ae:	c3                   	ret    

080496af <sig_handler>:
 80496af:	55                   	push   %ebp
 80496b0:	89 e5                	mov    %esp,%ebp
 80496b2:	83 ec 18             	sub    $0x18,%esp
 80496b5:	c7 44 24 04 2c ac 04 	movl   $0x804ac2c,0x4(%esp)
 80496bc:	08 
 80496bd:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80496c4:	e8 db f1 ff ff       	call   80488a4 <__printf_chk@plt>
 80496c9:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
 80496d0:	e8 ef f2 ff ff       	call   80489c4 <sleep@plt>
 80496d5:	c7 44 24 04 f3 a5 04 	movl   $0x804a5f3,0x4(%esp)
 80496dc:	08 
 80496dd:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80496e4:	e8 bb f1 ff ff       	call   80488a4 <__printf_chk@plt>
 80496e9:	a1 e0 c7 04 08       	mov    0x804c7e0,%eax
 80496ee:	89 04 24             	mov    %eax,(%esp)
 80496f1:	e8 2e f2 ff ff       	call   8048924 <fflush@plt>
 80496f6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80496fd:	e8 c2 f2 ff ff       	call   80489c4 <sleep@plt>
 8049702:	c7 44 24 04 fb a5 04 	movl   $0x804a5fb,0x4(%esp)
 8049709:	08 
 804970a:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049711:	e8 8e f1 ff ff       	call   80488a4 <__printf_chk@plt>
 8049716:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
 804971d:	e8 e2 f2 ff ff       	call   8048a04 <exit@plt>
 8049722:	90                   	nop
 8049723:	90                   	nop
 8049724:	90                   	nop
 8049725:	90                   	nop
 8049726:	90                   	nop
 8049727:	90                   	nop
 8049728:	90                   	nop
 8049729:	90                   	nop
 804972a:	90                   	nop
 804972b:	90                   	nop
 804972c:	90                   	nop
 804972d:	90                   	nop
 804972e:	90                   	nop
 804972f:	90                   	nop

08049730 <init_timeout>:
 8049730:	55                   	push   %ebp
 8049731:	89 e5                	mov    %esp,%ebp
 8049733:	53                   	push   %ebx
 8049734:	83 ec 14             	sub    $0x14,%esp
 8049737:	8b 5d 08             	mov    0x8(%ebp),%ebx
 804973a:	85 db                	test   %ebx,%ebx
 804973c:	74 25                	je     8049763 <init_timeout+0x33>
 804973e:	c7 44 24 04 84 98 04 	movl   $0x8049884,0x4(%esp)
 8049745:	08 
 8049746:	c7 04 24 0e 00 00 00 	movl   $0xe,(%esp)
 804974d:	e8 22 f1 ff ff       	call   8048874 <signal@plt>
 8049752:	89 d8                	mov    %ebx,%eax
 8049754:	c1 f8 1f             	sar    $0x1f,%eax
 8049757:	f7 d0                	not    %eax
 8049759:	21 c3                	and    %eax,%ebx
 804975b:	89 1c 24             	mov    %ebx,(%esp)
 804975e:	e8 01 f2 ff ff       	call   8048964 <alarm@plt>
 8049763:	83 c4 14             	add    $0x14,%esp
 8049766:	5b                   	pop    %ebx
 8049767:	5d                   	pop    %ebp
 8049768:	c3                   	ret    

08049769 <rio_readlineb>:
 8049769:	55                   	push   %ebp
 804976a:	89 e5                	mov    %esp,%ebp
 804976c:	57                   	push   %edi
 804976d:	56                   	push   %esi
 804976e:	53                   	push   %ebx
 804976f:	83 ec 3c             	sub    $0x3c,%esp
 8049772:	89 c3                	mov    %eax,%ebx
 8049774:	89 4d c8             	mov    %ecx,-0x38(%ebp)
 8049777:	89 55 d0             	mov    %edx,-0x30(%ebp)
 804977a:	83 f9 01             	cmp    $0x1,%ecx
 804977d:	0f 86 cf 00 00 00    	jbe    8049852 <rio_readlineb+0xe9>
 8049783:	8d 78 0c             	lea    0xc(%eax),%edi
 8049786:	89 7d d4             	mov    %edi,-0x2c(%ebp)
 8049789:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)
 8049790:	eb 3e                	jmp    80497d0 <rio_readlineb+0x67>
 8049792:	c7 44 24 08 00 20 00 	movl   $0x2000,0x8(%esp)
 8049799:	00 
 804979a:	89 7c 24 04          	mov    %edi,0x4(%esp)
 804979e:	8b 03                	mov    (%ebx),%eax
 80497a0:	89 04 24             	mov    %eax,(%esp)
 80497a3:	e8 5c f1 ff ff       	call   8048904 <read@plt>
 80497a8:	89 43 04             	mov    %eax,0x4(%ebx)
 80497ab:	85 c0                	test   %eax,%eax
 80497ad:	79 13                	jns    80497c2 <rio_readlineb+0x59>
 80497af:	e8 90 f0 ff ff       	call   8048844 <__errno_location@plt>
 80497b4:	83 38 04             	cmpl   $0x4,(%eax)
 80497b7:	74 17                	je     80497d0 <rio_readlineb+0x67>
 80497b9:	be ff ff ff ff       	mov    $0xffffffff,%esi
 80497be:	66 90                	xchg   %ax,%ax
 80497c0:	eb 5d                	jmp    804981f <rio_readlineb+0xb6>
 80497c2:	85 c0                	test   %eax,%eax
 80497c4:	0f 84 a0 00 00 00    	je     804986a <rio_readlineb+0x101>
 80497ca:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80497cd:	89 43 08             	mov    %eax,0x8(%ebx)
 80497d0:	8b 73 04             	mov    0x4(%ebx),%esi
 80497d3:	85 f6                	test   %esi,%esi
 80497d5:	7e bb                	jle    8049792 <rio_readlineb+0x29>
 80497d7:	85 f6                	test   %esi,%esi
 80497d9:	0f 85 92 00 00 00    	jne    8049871 <rio_readlineb+0x108>
 80497df:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
 80497e6:	00 
 80497e7:	89 74 24 08          	mov    %esi,0x8(%esp)
 80497eb:	8b 43 08             	mov    0x8(%ebx),%eax
 80497ee:	89 44 24 04          	mov    %eax,0x4(%esp)
 80497f2:	8d 55 e7             	lea    -0x19(%ebp),%edx
 80497f5:	89 14 24             	mov    %edx,(%esp)
 80497f8:	e8 f7 f0 ff ff       	call   80488f4 <__memcpy_chk@plt>
 80497fd:	01 73 08             	add    %esi,0x8(%ebx)
 8049800:	29 73 04             	sub    %esi,0x4(%ebx)
 8049803:	83 fe 01             	cmp    $0x1,%esi
 8049806:	75 17                	jne    804981f <rio_readlineb+0xb6>
 8049808:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax
 804980c:	8b 55 d0             	mov    -0x30(%ebp),%edx
 804980f:	88 02                	mov    %al,(%edx)
 8049811:	83 c2 01             	add    $0x1,%edx
 8049814:	89 55 d0             	mov    %edx,-0x30(%ebp)
 8049817:	80 7d e7 0a          	cmpb   $0xa,-0x19(%ebp)
 804981b:	75 25                	jne    8049842 <rio_readlineb+0xd9>
 804981d:	eb 3a                	jmp    8049859 <rio_readlineb+0xf0>
 804981f:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8049822:	85 f6                	test   %esi,%esi
 8049824:	74 0c                	je     8049832 <rio_readlineb+0xc9>
 8049826:	c7 45 cc ff ff ff ff 	movl   $0xffffffff,-0x34(%ebp)
 804982d:	8d 76 00             	lea    0x0(%esi),%esi
 8049830:	eb 2d                	jmp    804985f <rio_readlineb+0xf6>
 8049832:	83 f8 01             	cmp    $0x1,%eax
 8049835:	75 22                	jne    8049859 <rio_readlineb+0xf0>
 8049837:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
 804983e:	66 90                	xchg   %ax,%ax
 8049840:	eb 1d                	jmp    804985f <rio_readlineb+0xf6>
 8049842:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 8049846:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8049849:	39 45 c8             	cmp    %eax,-0x38(%ebp)
 804984c:	77 82                	ja     80497d0 <rio_readlineb+0x67>
 804984e:	66 90                	xchg   %ax,%ax
 8049850:	eb 07                	jmp    8049859 <rio_readlineb+0xf0>
 8049852:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)
 8049859:	8b 55 d0             	mov    -0x30(%ebp),%edx
 804985c:	c6 02 00             	movb   $0x0,(%edx)
 804985f:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8049862:	83 c4 3c             	add    $0x3c,%esp
 8049865:	5b                   	pop    %ebx
 8049866:	5e                   	pop    %esi
 8049867:	5f                   	pop    %edi
 8049868:	5d                   	pop    %ebp
 8049869:	c3                   	ret    
 804986a:	be 00 00 00 00       	mov    $0x0,%esi
 804986f:	eb ae                	jmp    804981f <rio_readlineb+0xb6>
 8049871:	8b 43 08             	mov    0x8(%ebx),%eax
 8049874:	0f b6 00             	movzbl (%eax),%eax
 8049877:	88 45 e7             	mov    %al,-0x19(%ebp)
 804987a:	83 43 08 01          	addl   $0x1,0x8(%ebx)
 804987e:	83 6b 04 01          	subl   $0x1,0x4(%ebx)
 8049882:	eb 84                	jmp    8049808 <rio_readlineb+0x9f>

08049884 <sigalrm_handler>:
 8049884:	55                   	push   %ebp
 8049885:	89 e5                	mov    %esp,%ebp
 8049887:	83 ec 18             	sub    $0x18,%esp
 804988a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8049891:	00 
 8049892:	c7 44 24 08 68 ac 04 	movl   $0x804ac68,0x8(%esp)
 8049899:	08 
 804989a:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 80498a1:	00 
 80498a2:	a1 c0 c7 04 08       	mov    0x804c7c0,%eax
 80498a7:	89 04 24             	mov    %eax,(%esp)
 80498aa:	e8 b5 ef ff ff       	call   8048864 <__fprintf_chk@plt>
 80498af:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80498b6:	e8 49 f1 ff ff       	call   8048a04 <exit@plt>

080498bb <init_driver>:
 80498bb:	55                   	push   %ebp
 80498bc:	89 e5                	mov    %esp,%ebp
 80498be:	57                   	push   %edi
 80498bf:	56                   	push   %esi
 80498c0:	53                   	push   %ebx
 80498c1:	83 ec 4c             	sub    $0x4c,%esp
 80498c4:	8b 7d 08             	mov    0x8(%ebp),%edi
 80498c7:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80498cd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80498d0:	31 c0                	xor    %eax,%eax
 80498d2:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 80498d9:	00 
 80498da:	c7 04 24 0d 00 00 00 	movl   $0xd,(%esp)
 80498e1:	e8 8e ef ff ff       	call   8048874 <signal@plt>
 80498e6:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 80498ed:	00 
 80498ee:	c7 04 24 1d 00 00 00 	movl   $0x1d,(%esp)
 80498f5:	e8 7a ef ff ff       	call   8048874 <signal@plt>
 80498fa:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049901:	00 
 8049902:	c7 04 24 1d 00 00 00 	movl   $0x1d,(%esp)
 8049909:	e8 66 ef ff ff       	call   8048874 <signal@plt>
 804990e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 8049915:	00 
 8049916:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 804991d:	00 
 804991e:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
 8049925:	e8 0a f0 ff ff       	call   8048934 <socket@plt>
 804992a:	89 c6                	mov    %eax,%esi
 804992c:	85 c0                	test   %eax,%eax
 804992e:	79 4e                	jns    804997e <init_driver+0xc3>
 8049930:	c7 07 45 72 72 6f    	movl   $0x6f727245,(%edi)
 8049936:	c7 47 04 72 3a 20 43 	movl   $0x43203a72,0x4(%edi)
 804993d:	c7 47 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%edi)
 8049944:	c7 47 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%edi)
 804994b:	c7 47 10 61 62 6c 65 	movl   $0x656c6261,0x10(%edi)
 8049952:	c7 47 14 20 74 6f 20 	movl   $0x206f7420,0x14(%edi)
 8049959:	c7 47 18 63 72 65 61 	movl   $0x61657263,0x18(%edi)
 8049960:	c7 47 1c 74 65 20 73 	movl   $0x73206574,0x1c(%edi)
 8049967:	c7 47 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%edi)
 804996e:	66 c7 47 24 74 00    	movw   $0x74,0x24(%edi)
 8049974:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049979:	e9 2a 01 00 00       	jmp    8049aa8 <init_driver+0x1ed>
 804997e:	c7 04 24 90 ae 04 08 	movl   $0x804ae90,(%esp)
 8049985:	e8 6a f0 ff ff       	call   80489f4 <gethostbyname@plt>
 804998a:	85 c0                	test   %eax,%eax
 804998c:	75 68                	jne    80499f6 <init_driver+0x13b>
 804998e:	c7 07 45 72 72 6f    	movl   $0x6f727245,(%edi)
 8049994:	c7 47 04 72 3a 20 44 	movl   $0x44203a72,0x4(%edi)
 804999b:	c7 47 08 4e 53 20 69 	movl   $0x6920534e,0x8(%edi)
 80499a2:	c7 47 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%edi)
 80499a9:	c7 47 10 61 62 6c 65 	movl   $0x656c6261,0x10(%edi)
 80499b0:	c7 47 14 20 74 6f 20 	movl   $0x206f7420,0x14(%edi)
 80499b7:	c7 47 18 72 65 73 6f 	movl   $0x6f736572,0x18(%edi)
 80499be:	c7 47 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%edi)
 80499c5:	c7 47 20 73 65 72 76 	movl   $0x76726573,0x20(%edi)
 80499cc:	c7 47 24 65 72 20 61 	movl   $0x61207265,0x24(%edi)
 80499d3:	c7 47 28 64 64 72 65 	movl   $0x65726464,0x28(%edi)
 80499da:	66 c7 47 2c 73 73    	movw   $0x7373,0x2c(%edi)
 80499e0:	c6 47 2e 00          	movb   $0x0,0x2e(%edi)
 80499e4:	89 34 24             	mov    %esi,(%esp)
 80499e7:	e8 a8 ef ff ff       	call   8048994 <close@plt>
 80499ec:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80499f1:	e9 b2 00 00 00       	jmp    8049aa8 <init_driver+0x1ed>
 80499f6:	8d 5d d4             	lea    -0x2c(%ebp),%ebx
 80499f9:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
 80499ff:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
 8049a06:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
 8049a0d:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
 8049a14:	66 c7 45 d4 02 00    	movw   $0x2,-0x2c(%ebp)
 8049a1a:	c7 44 24 0c 0c 00 00 	movl   $0xc,0xc(%esp)
 8049a21:	00 
 8049a22:	8b 50 0c             	mov    0xc(%eax),%edx
 8049a25:	89 54 24 08          	mov    %edx,0x8(%esp)
 8049a29:	8b 40 10             	mov    0x10(%eax),%eax
 8049a2c:	8b 00                	mov    (%eax),%eax
 8049a2e:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049a32:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8049a35:	89 04 24             	mov    %eax,(%esp)
 8049a38:	e8 a7 ef ff ff       	call   80489e4 <__memmove_chk@plt>
 8049a3d:	66 c7 45 d6 3b 6e    	movw   $0x6e3b,-0x2a(%ebp)
 8049a43:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)
 8049a4a:	00 
 8049a4b:	89 5c 24 04          	mov    %ebx,0x4(%esp)
 8049a4f:	89 34 24             	mov    %esi,(%esp)
 8049a52:	e8 fd ed ff ff       	call   8048854 <connect@plt>
 8049a57:	85 c0                	test   %eax,%eax
 8049a59:	79 37                	jns    8049a92 <init_driver+0x1d7>
 8049a5b:	c7 44 24 10 90 ae 04 	movl   $0x804ae90,0x10(%esp)
 8049a62:	08 
 8049a63:	c7 44 24 0c 8c ac 04 	movl   $0x804ac8c,0xc(%esp)
 8049a6a:	08 
 8049a6b:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
 8049a72:	ff 
 8049a73:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049a7a:	00 
 8049a7b:	89 3c 24             	mov    %edi,(%esp)
 8049a7e:	e8 51 ef ff ff       	call   80489d4 <__sprintf_chk@plt>
 8049a83:	89 34 24             	mov    %esi,(%esp)
 8049a86:	e8 09 ef ff ff       	call   8048994 <close@plt>
 8049a8b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049a90:	eb 16                	jmp    8049aa8 <init_driver+0x1ed>
 8049a92:	89 34 24             	mov    %esi,(%esp)
 8049a95:	e8 fa ee ff ff       	call   8048994 <close@plt>
 8049a9a:	66 c7 07 4f 4b       	movw   $0x4b4f,(%edi)
 8049a9f:	c6 47 02 00          	movb   $0x0,0x2(%edi)
 8049aa3:	b8 00 00 00 00       	mov    $0x0,%eax
 8049aa8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8049aab:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8049ab2:	74 05                	je     8049ab9 <init_driver+0x1fe>
 8049ab4:	e8 eb ee ff ff       	call   80489a4 <__stack_chk_fail@plt>
 8049ab9:	83 c4 4c             	add    $0x4c,%esp
 8049abc:	5b                   	pop    %ebx
 8049abd:	5e                   	pop    %esi
 8049abe:	5f                   	pop    %edi
 8049abf:	5d                   	pop    %ebp
 8049ac0:	c3                   	ret    

08049ac1 <submitr>:
 8049ac1:	55                   	push   %ebp
 8049ac2:	89 e5                	mov    %esp,%ebp
 8049ac4:	57                   	push   %edi
 8049ac5:	56                   	push   %esi
 8049ac6:	53                   	push   %ebx
 8049ac7:	81 ec 7c a0 00 00    	sub    $0xa07c,%esp
 8049acd:	8b 5d 08             	mov    0x8(%ebp),%ebx
 8049ad0:	8b 45 10             	mov    0x10(%ebp),%eax
 8049ad3:	89 85 a4 5f ff ff    	mov    %eax,-0xa05c(%ebp)
 8049ad9:	8b 55 14             	mov    0x14(%ebp),%edx
 8049adc:	89 95 a0 5f ff ff    	mov    %edx,-0xa060(%ebp)
 8049ae2:	8b 4d 18             	mov    0x18(%ebp),%ecx
 8049ae5:	89 8d 9c 5f ff ff    	mov    %ecx,-0xa064(%ebp)
 8049aeb:	8b 75 1c             	mov    0x1c(%ebp),%esi
 8049aee:	89 b5 a8 5f ff ff    	mov    %esi,-0xa058(%ebp)
 8049af4:	8b 7d 20             	mov    0x20(%ebp),%edi
 8049af7:	89 bd b0 5f ff ff    	mov    %edi,-0xa050(%ebp)
 8049afd:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049b03:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8049b06:	31 c0                	xor    %eax,%eax
 8049b08:	c7 85 bc 5f ff ff 00 	movl   $0x0,-0xa044(%ebp)
 8049b0f:	00 00 00 
 8049b12:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 8049b19:	00 
 8049b1a:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049b21:	00 
 8049b22:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
 8049b29:	e8 06 ee ff ff       	call   8048934 <socket@plt>
 8049b2e:	89 85 ac 5f ff ff    	mov    %eax,-0xa054(%ebp)
 8049b34:	85 c0                	test   %eax,%eax
 8049b36:	79 18                	jns    8049b50 <submitr+0x8f>
 8049b38:	b8 b4 ac 04 08       	mov    $0x804acb4,%eax
 8049b3d:	b9 26 00 00 00       	mov    $0x26,%ecx
 8049b42:	89 c6                	mov    %eax,%esi
 8049b44:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
 8049b46:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049b4b:	e9 d8 05 00 00       	jmp    804a128 <submitr+0x667>
 8049b50:	89 1c 24             	mov    %ebx,(%esp)
 8049b53:	e8 9c ee ff ff       	call   80489f4 <gethostbyname@plt>
 8049b58:	85 c0                	test   %eax,%eax
 8049b5a:	75 2c                	jne    8049b88 <submitr+0xc7>
 8049b5c:	b8 dc ac 04 08       	mov    $0x804acdc,%eax
 8049b61:	b9 2f 00 00 00       	mov    $0x2f,%ecx
 8049b66:	8b bd b0 5f ff ff    	mov    -0xa050(%ebp),%edi
 8049b6c:	89 c6                	mov    %eax,%esi
 8049b6e:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
 8049b70:	8b 85 ac 5f ff ff    	mov    -0xa054(%ebp),%eax
 8049b76:	89 04 24             	mov    %eax,(%esp)
 8049b79:	e8 16 ee ff ff       	call   8048994 <close@plt>
 8049b7e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049b83:	e9 a0 05 00 00       	jmp    804a128 <submitr+0x667>
 8049b88:	8d 5d cc             	lea    -0x34(%ebp),%ebx
 8049b8b:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
 8049b91:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
 8049b98:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
 8049b9f:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
 8049ba6:	66 c7 45 cc 02 00    	movw   $0x2,-0x34(%ebp)
 8049bac:	c7 44 24 0c 0c 00 00 	movl   $0xc,0xc(%esp)
 8049bb3:	00 
 8049bb4:	8b 50 0c             	mov    0xc(%eax),%edx
 8049bb7:	89 54 24 08          	mov    %edx,0x8(%esp)
 8049bbb:	8b 40 10             	mov    0x10(%eax),%eax
 8049bbe:	8b 00                	mov    (%eax),%eax
 8049bc0:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049bc4:	8d 45 d0             	lea    -0x30(%ebp),%eax
 8049bc7:	89 04 24             	mov    %eax,(%esp)
 8049bca:	e8 15 ee ff ff       	call   80489e4 <__memmove_chk@plt>
 8049bcf:	0f b7 45 0c          	movzwl 0xc(%ebp),%eax
 8049bd3:	66 c1 c8 08          	ror    $0x8,%ax
 8049bd7:	66 89 45 ce          	mov    %ax,-0x32(%ebp)
 8049bdb:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)
 8049be2:	00 
 8049be3:	89 5c 24 04          	mov    %ebx,0x4(%esp)
 8049be7:	8b 95 ac 5f ff ff    	mov    -0xa054(%ebp),%edx
 8049bed:	89 14 24             	mov    %edx,(%esp)
 8049bf0:	e8 5f ec ff ff       	call   8048854 <connect@plt>
 8049bf5:	85 c0                	test   %eax,%eax
 8049bf7:	79 2c                	jns    8049c25 <submitr+0x164>
 8049bf9:	b8 0c ad 04 08       	mov    $0x804ad0c,%eax
 8049bfe:	b9 27 00 00 00       	mov    $0x27,%ecx
 8049c03:	8b bd b0 5f ff ff    	mov    -0xa050(%ebp),%edi
 8049c09:	89 c6                	mov    %eax,%esi
 8049c0b:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
 8049c0d:	8b 85 ac 5f ff ff    	mov    -0xa054(%ebp),%eax
 8049c13:	89 04 24             	mov    %eax,(%esp)
 8049c16:	e8 79 ed ff ff       	call   8048994 <close@plt>
 8049c1b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049c20:	e9 03 05 00 00       	jmp    804a128 <submitr+0x667>
 8049c25:	ba ff ff ff ff       	mov    $0xffffffff,%edx
 8049c2a:	8b bd a8 5f ff ff    	mov    -0xa058(%ebp),%edi
 8049c30:	b8 00 00 00 00       	mov    $0x0,%eax
 8049c35:	89 d1                	mov    %edx,%ecx
 8049c37:	f2 ae                	repnz scas %es:(%edi),%al
 8049c39:	89 cb                	mov    %ecx,%ebx
 8049c3b:	f7 d3                	not    %ebx
 8049c3d:	8b bd a4 5f ff ff    	mov    -0xa05c(%ebp),%edi
 8049c43:	89 d1                	mov    %edx,%ecx
 8049c45:	f2 ae                	repnz scas %es:(%edi),%al
 8049c47:	89 8d b4 5f ff ff    	mov    %ecx,-0xa04c(%ebp)
 8049c4d:	8b bd a0 5f ff ff    	mov    -0xa060(%ebp),%edi
 8049c53:	89 d1                	mov    %edx,%ecx
 8049c55:	f2 ae                	repnz scas %es:(%edi),%al
 8049c57:	89 ce                	mov    %ecx,%esi
 8049c59:	f7 d6                	not    %esi
 8049c5b:	8b bd 9c 5f ff ff    	mov    -0xa064(%ebp),%edi
 8049c61:	89 d1                	mov    %edx,%ecx
 8049c63:	f2 ae                	repnz scas %es:(%edi),%al
 8049c65:	2b b5 b4 5f ff ff    	sub    -0xa04c(%ebp),%esi
 8049c6b:	29 ce                	sub    %ecx,%esi
 8049c6d:	8d 44 5b fd          	lea    -0x3(%ebx,%ebx,2),%eax
 8049c71:	8d 44 06 7b          	lea    0x7b(%esi,%eax,1),%eax
 8049c75:	3d 00 20 00 00       	cmp    $0x2000,%eax
 8049c7a:	76 7f                	jbe    8049cfb <submitr+0x23a>
 8049c7c:	8b b5 b0 5f ff ff    	mov    -0xa050(%ebp),%esi
 8049c82:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 8049c88:	c7 46 04 72 3a 20 52 	movl   $0x52203a72,0x4(%esi)
 8049c8f:	c7 46 08 65 73 75 6c 	movl   $0x6c757365,0x8(%esi)
 8049c96:	c7 46 0c 74 20 73 74 	movl   $0x74732074,0xc(%esi)
 8049c9d:	c7 46 10 72 69 6e 67 	movl   $0x676e6972,0x10(%esi)
 8049ca4:	c7 46 14 20 74 6f 6f 	movl   $0x6f6f7420,0x14(%esi)
 8049cab:	c7 46 18 20 6c 61 72 	movl   $0x72616c20,0x18(%esi)
 8049cb2:	c7 46 1c 67 65 2e 20 	movl   $0x202e6567,0x1c(%esi)
 8049cb9:	c7 46 20 49 6e 63 72 	movl   $0x72636e49,0x20(%esi)
 8049cc0:	c7 46 24 65 61 73 65 	movl   $0x65736165,0x24(%esi)
 8049cc7:	c7 46 28 20 53 55 42 	movl   $0x42555320,0x28(%esi)
 8049cce:	c7 46 2c 4d 49 54 52 	movl   $0x5254494d,0x2c(%esi)
 8049cd5:	c7 46 30 5f 4d 41 58 	movl   $0x58414d5f,0x30(%esi)
 8049cdc:	c7 46 34 42 55 46 00 	movl   $0x465542,0x34(%esi)
 8049ce3:	8b bd ac 5f ff ff    	mov    -0xa054(%ebp),%edi
 8049ce9:	89 3c 24             	mov    %edi,(%esp)
 8049cec:	e8 a3 ec ff ff       	call   8048994 <close@plt>
 8049cf1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049cf6:	e9 2d 04 00 00       	jmp    804a128 <submitr+0x667>
 8049cfb:	8d 95 cc bf ff ff    	lea    -0x4034(%ebp),%edx
 8049d01:	b9 00 08 00 00       	mov    $0x800,%ecx
 8049d06:	b8 00 00 00 00       	mov    $0x0,%eax
 8049d0b:	89 d7                	mov    %edx,%edi
 8049d0d:	f3 ab                	rep stos %eax,%es:(%edi)
 8049d0f:	8b bd a8 5f ff ff    	mov    -0xa058(%ebp),%edi
 8049d15:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049d1a:	f2 ae                	repnz scas %es:(%edi),%al
 8049d1c:	f7 d1                	not    %ecx
 8049d1e:	89 cf                	mov    %ecx,%edi
 8049d20:	83 ef 01             	sub    $0x1,%edi
 8049d23:	0f 84 14 04 00 00    	je     804a13d <submitr+0x67c>
 8049d29:	89 d6                	mov    %edx,%esi
 8049d2b:	bb 00 00 00 00       	mov    $0x0,%ebx
 8049d30:	89 bd b4 5f ff ff    	mov    %edi,-0xa04c(%ebp)
 8049d36:	8b bd a8 5f ff ff    	mov    -0xa058(%ebp),%edi
 8049d3c:	0f b6 04 1f          	movzbl (%edi,%ebx,1),%eax
 8049d40:	3c 2a                	cmp    $0x2a,%al
 8049d42:	74 26                	je     8049d6a <submitr+0x2a9>
 8049d44:	3c 2d                	cmp    $0x2d,%al
 8049d46:	74 22                	je     8049d6a <submitr+0x2a9>
 8049d48:	3c 2e                	cmp    $0x2e,%al
 8049d4a:	74 1e                	je     8049d6a <submitr+0x2a9>
 8049d4c:	3c 5f                	cmp    $0x5f,%al
 8049d4e:	66 90                	xchg   %ax,%ax
 8049d50:	74 18                	je     8049d6a <submitr+0x2a9>
 8049d52:	8d 50 d0             	lea    -0x30(%eax),%edx
 8049d55:	80 fa 09             	cmp    $0x9,%dl
 8049d58:	76 10                	jbe    8049d6a <submitr+0x2a9>
 8049d5a:	8d 50 bf             	lea    -0x41(%eax),%edx
 8049d5d:	80 fa 19             	cmp    $0x19,%dl
 8049d60:	76 08                	jbe    8049d6a <submitr+0x2a9>
 8049d62:	8d 50 9f             	lea    -0x61(%eax),%edx
 8049d65:	80 fa 19             	cmp    $0x19,%dl
 8049d68:	77 07                	ja     8049d71 <submitr+0x2b0>
 8049d6a:	88 06                	mov    %al,(%esi)
 8049d6c:	83 c6 01             	add    $0x1,%esi
 8049d6f:	eb 59                	jmp    8049dca <submitr+0x309>
 8049d71:	3c 20                	cmp    $0x20,%al
 8049d73:	75 08                	jne    8049d7d <submitr+0x2bc>
 8049d75:	c6 06 2b             	movb   $0x2b,(%esi)
 8049d78:	83 c6 01             	add    $0x1,%esi
 8049d7b:	eb 4d                	jmp    8049dca <submitr+0x309>
 8049d7d:	8d 50 e0             	lea    -0x20(%eax),%edx
 8049d80:	80 fa 5f             	cmp    $0x5f,%dl
 8049d83:	76 04                	jbe    8049d89 <submitr+0x2c8>
 8049d85:	3c 09                	cmp    $0x9,%al
 8049d87:	75 55                	jne    8049dde <submitr+0x31d>
 8049d89:	0f b6 c0             	movzbl %al,%eax
 8049d8c:	89 44 24 10          	mov    %eax,0x10(%esp)
 8049d90:	c7 44 24 0c a9 ae 04 	movl   $0x804aea9,0xc(%esp)
 8049d97:	08 
 8049d98:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)
 8049d9f:	00 
 8049da0:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049da7:	00 
 8049da8:	8d 45 dc             	lea    -0x24(%ebp),%eax
 8049dab:	89 04 24             	mov    %eax,(%esp)
 8049dae:	e8 21 ec ff ff       	call   80489d4 <__sprintf_chk@plt>
 8049db3:	0f b6 45 dc          	movzbl -0x24(%ebp),%eax
 8049db7:	88 06                	mov    %al,(%esi)
 8049db9:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax
 8049dbd:	88 46 01             	mov    %al,0x1(%esi)
 8049dc0:	0f b6 45 de          	movzbl -0x22(%ebp),%eax
 8049dc4:	88 46 02             	mov    %al,0x2(%esi)
 8049dc7:	83 c6 03             	add    $0x3,%esi
 8049dca:	83 c3 01             	add    $0x1,%ebx
 8049dcd:	3b 9d b4 5f ff ff    	cmp    -0xa04c(%ebp),%ebx
 8049dd3:	0f 85 63 ff ff ff    	jne    8049d3c <submitr+0x27b>
 8049dd9:	e9 5f 03 00 00       	jmp    804a13d <submitr+0x67c>
 8049dde:	b8 34 ad 04 08       	mov    $0x804ad34,%eax
 8049de3:	b9 43 00 00 00       	mov    $0x43,%ecx
 8049de8:	8b bd b0 5f ff ff    	mov    -0xa050(%ebp),%edi
 8049dee:	89 c6                	mov    %eax,%esi
 8049df0:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
 8049df2:	8b 85 ac 5f ff ff    	mov    -0xa054(%ebp),%eax
 8049df8:	89 04 24             	mov    %eax,(%esp)
 8049dfb:	e8 94 eb ff ff       	call   8048994 <close@plt>
 8049e00:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049e05:	e9 1e 03 00 00       	jmp    804a128 <submitr+0x667>
 8049e0a:	01 c6                	add    %eax,%esi
 8049e0c:	89 5c 24 08          	mov    %ebx,0x8(%esp)
 8049e10:	89 74 24 04          	mov    %esi,0x4(%esp)
 8049e14:	89 3c 24             	mov    %edi,(%esp)
 8049e17:	e8 a8 ea ff ff       	call   80488c4 <write@plt>
 8049e1c:	85 c0                	test   %eax,%eax
 8049e1e:	7f 0f                	jg     8049e2f <submitr+0x36e>
 8049e20:	e8 1f ea ff ff       	call   8048844 <__errno_location@plt>
 8049e25:	83 38 04             	cmpl   $0x4,(%eax)
 8049e28:	75 13                	jne    8049e3d <submitr+0x37c>
 8049e2a:	b8 00 00 00 00       	mov    $0x0,%eax
 8049e2f:	29 c3                	sub    %eax,%ebx
 8049e31:	75 d7                	jne    8049e0a <submitr+0x349>
 8049e33:	8b bd b4 5f ff ff    	mov    -0xa04c(%ebp),%edi
 8049e39:	85 ff                	test   %edi,%edi
 8049e3b:	79 67                	jns    8049ea4 <submitr+0x3e3>
 8049e3d:	8b bd b0 5f ff ff    	mov    -0xa050(%ebp),%edi
 8049e43:	be 78 ad 04 08       	mov    $0x804ad78,%esi
 8049e48:	b8 2c 00 00 00       	mov    $0x2c,%eax
 8049e4d:	f7 c7 01 00 00 00    	test   $0x1,%edi
 8049e53:	74 04                	je     8049e59 <submitr+0x398>
 8049e55:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 8049e56:	83 e8 01             	sub    $0x1,%eax
 8049e59:	f7 c7 02 00 00 00    	test   $0x2,%edi
 8049e5f:	74 05                	je     8049e66 <submitr+0x3a5>
 8049e61:	66 a5                	movsw  %ds:(%esi),%es:(%edi)
 8049e63:	83 e8 02             	sub    $0x2,%eax
 8049e66:	89 c1                	mov    %eax,%ecx
 8049e68:	c1 e9 02             	shr    $0x2,%ecx
 8049e6b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8049e6d:	ba 00 00 00 00       	mov    $0x0,%edx
 8049e72:	a8 02                	test   $0x2,%al
 8049e74:	74 0b                	je     8049e81 <submitr+0x3c0>
 8049e76:	0f b7 0c 16          	movzwl (%esi,%edx,1),%ecx
 8049e7a:	66 89 0c 17          	mov    %cx,(%edi,%edx,1)
 8049e7e:	83 c2 02             	add    $0x2,%edx
 8049e81:	a8 01                	test   $0x1,%al
 8049e83:	74 07                	je     8049e8c <submitr+0x3cb>
 8049e85:	0f b6 04 16          	movzbl (%esi,%edx,1),%eax
 8049e89:	88 04 17             	mov    %al,(%edi,%edx,1)
 8049e8c:	8b 95 ac 5f ff ff    	mov    -0xa054(%ebp),%edx
 8049e92:	89 14 24             	mov    %edx,(%esp)
 8049e95:	e8 fa ea ff ff       	call   8048994 <close@plt>
 8049e9a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049e9f:	e9 84 02 00 00       	jmp    804a128 <submitr+0x667>
 8049ea4:	8b 8d ac 5f ff ff    	mov    -0xa054(%ebp),%ecx
 8049eaa:	89 8d c0 5f ff ff    	mov    %ecx,-0xa040(%ebp)
 8049eb0:	c7 85 c4 5f ff ff 00 	movl   $0x0,-0xa03c(%ebp)
 8049eb7:	00 00 00 
 8049eba:	8d 85 c0 5f ff ff    	lea    -0xa040(%ebp),%eax
 8049ec0:	8d 95 cc 5f ff ff    	lea    -0xa034(%ebp),%edx
 8049ec6:	89 95 c8 5f ff ff    	mov    %edx,-0xa038(%ebp)
 8049ecc:	8d 95 cc df ff ff    	lea    -0x2034(%ebp),%edx
 8049ed2:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049ed7:	e8 8d f8 ff ff       	call   8049769 <rio_readlineb>
 8049edc:	85 c0                	test   %eax,%eax
 8049ede:	7f 2c                	jg     8049f0c <submitr+0x44b>
 8049ee0:	b8 a4 ad 04 08       	mov    $0x804ada4,%eax
 8049ee5:	b9 36 00 00 00       	mov    $0x36,%ecx
 8049eea:	8b bd b0 5f ff ff    	mov    -0xa050(%ebp),%edi
 8049ef0:	89 c6                	mov    %eax,%esi
 8049ef2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
 8049ef4:	8b 85 ac 5f ff ff    	mov    -0xa054(%ebp),%eax
 8049efa:	89 04 24             	mov    %eax,(%esp)
 8049efd:	e8 92 ea ff ff       	call   8048994 <close@plt>
 8049f02:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049f07:	e9 1c 02 00 00       	jmp    804a128 <submitr+0x667>
 8049f0c:	8d 85 cc 7f ff ff    	lea    -0x8034(%ebp),%eax
 8049f12:	89 44 24 10          	mov    %eax,0x10(%esp)
 8049f16:	8d 85 bc 5f ff ff    	lea    -0xa044(%ebp),%eax
 8049f1c:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049f20:	8d 85 cc 9f ff ff    	lea    -0x6034(%ebp),%eax
 8049f26:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049f2a:	c7 44 24 04 b0 ae 04 	movl   $0x804aeb0,0x4(%esp)
 8049f31:	08 
 8049f32:	8d 95 cc df ff ff    	lea    -0x2034(%ebp),%edx
 8049f38:	89 14 24             	mov    %edx,(%esp)
 8049f3b:	e8 54 e9 ff ff       	call   8048894 <__isoc99_sscanf@plt>
 8049f40:	8b 85 bc 5f ff ff    	mov    -0xa044(%ebp),%eax
 8049f46:	8d 9d cc df ff ff    	lea    -0x2034(%ebp),%ebx
 8049f4c:	8d b5 c0 5f ff ff    	lea    -0xa040(%ebp),%esi
 8049f52:	3d c8 00 00 00       	cmp    $0xc8,%eax
 8049f57:	0f 84 d3 00 00 00    	je     804a030 <submitr+0x56f>
 8049f5d:	8d 95 cc 7f ff ff    	lea    -0x8034(%ebp),%edx
 8049f63:	89 54 24 14          	mov    %edx,0x14(%esp)
 8049f67:	89 44 24 10          	mov    %eax,0x10(%esp)
 8049f6b:	c7 44 24 0c dc ad 04 	movl   $0x804addc,0xc(%esp)
 8049f72:	08 
 8049f73:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
 8049f7a:	ff 
 8049f7b:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049f82:	00 
 8049f83:	8b 8d b0 5f ff ff    	mov    -0xa050(%ebp),%ecx
 8049f89:	89 0c 24             	mov    %ecx,(%esp)
 8049f8c:	e8 43 ea ff ff       	call   80489d4 <__sprintf_chk@plt>
 8049f91:	8b b5 ac 5f ff ff    	mov    -0xa054(%ebp),%esi
 8049f97:	89 34 24             	mov    %esi,(%esp)
 8049f9a:	e8 f5 e9 ff ff       	call   8048994 <close@plt>
 8049f9f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049fa4:	e9 7f 01 00 00       	jmp    804a128 <submitr+0x667>
 8049fa9:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049fae:	89 da                	mov    %ebx,%edx
 8049fb0:	89 f0                	mov    %esi,%eax
 8049fb2:	e8 b2 f7 ff ff       	call   8049769 <rio_readlineb>
 8049fb7:	85 c0                	test   %eax,%eax
 8049fb9:	7f 75                	jg     804a030 <submitr+0x56f>
 8049fbb:	8b bd b0 5f ff ff    	mov    -0xa050(%ebp),%edi
 8049fc1:	c7 07 45 72 72 6f    	movl   $0x6f727245,(%edi)
 8049fc7:	c7 47 04 72 3a 20 43 	movl   $0x43203a72,0x4(%edi)
 8049fce:	c7 47 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%edi)
 8049fd5:	c7 47 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%edi)
 8049fdc:	c7 47 10 61 62 6c 65 	movl   $0x656c6261,0x10(%edi)
 8049fe3:	c7 47 14 20 74 6f 20 	movl   $0x206f7420,0x14(%edi)
 8049fea:	c7 47 18 72 65 61 64 	movl   $0x64616572,0x18(%edi)
 8049ff1:	c7 47 1c 20 68 65 61 	movl   $0x61656820,0x1c(%edi)
 8049ff8:	c7 47 20 64 65 72 73 	movl   $0x73726564,0x20(%edi)
 8049fff:	c7 47 24 20 66 72 6f 	movl   $0x6f726620,0x24(%edi)
 804a006:	c7 47 28 6d 20 73 65 	movl   $0x6573206d,0x28(%edi)
 804a00d:	c7 47 2c 72 76 65 72 	movl   $0x72657672,0x2c(%edi)
 804a014:	c6 47 30 00          	movb   $0x0,0x30(%edi)
 804a018:	8b 85 ac 5f ff ff    	mov    -0xa054(%ebp),%eax
 804a01e:	89 04 24             	mov    %eax,(%esp)
 804a021:	e8 6e e9 ff ff       	call   8048994 <close@plt>
 804a026:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804a02b:	e9 f8 00 00 00       	jmp    804a128 <submitr+0x667>
 804a030:	b8 c1 ae 04 08       	mov    $0x804aec1,%eax
 804a035:	0f b6 13             	movzbl (%ebx),%edx
 804a038:	3a 10                	cmp    (%eax),%dl
 804a03a:	0f 85 69 ff ff ff    	jne    8049fa9 <submitr+0x4e8>
 804a040:	0f b6 53 01          	movzbl 0x1(%ebx),%edx
 804a044:	3a 50 01             	cmp    0x1(%eax),%dl
 804a047:	0f 85 5c ff ff ff    	jne    8049fa9 <submitr+0x4e8>
 804a04d:	0f b6 53 02          	movzbl 0x2(%ebx),%edx
 804a051:	3a 50 02             	cmp    0x2(%eax),%dl
 804a054:	0f 85 4f ff ff ff    	jne    8049fa9 <submitr+0x4e8>
 804a05a:	8d 95 cc df ff ff    	lea    -0x2034(%ebp),%edx
 804a060:	8d 85 c0 5f ff ff    	lea    -0xa040(%ebp),%eax
 804a066:	b9 00 20 00 00       	mov    $0x2000,%ecx
 804a06b:	e8 f9 f6 ff ff       	call   8049769 <rio_readlineb>
 804a070:	85 c0                	test   %eax,%eax
 804a072:	7f 64                	jg     804a0d8 <submitr+0x617>
 804a074:	8b bd b0 5f ff ff    	mov    -0xa050(%ebp),%edi
 804a07a:	be 0c ae 04 08       	mov    $0x804ae0c,%esi
 804a07f:	b8 38 00 00 00       	mov    $0x38,%eax
 804a084:	f7 c7 01 00 00 00    	test   $0x1,%edi
 804a08a:	74 04                	je     804a090 <submitr+0x5cf>
 804a08c:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 804a08d:	83 e8 01             	sub    $0x1,%eax
 804a090:	f7 c7 02 00 00 00    	test   $0x2,%edi
 804a096:	74 05                	je     804a09d <submitr+0x5dc>
 804a098:	66 a5                	movsw  %ds:(%esi),%es:(%edi)
 804a09a:	83 e8 02             	sub    $0x2,%eax
 804a09d:	89 c1                	mov    %eax,%ecx
 804a09f:	c1 e9 02             	shr    $0x2,%ecx
 804a0a2:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 804a0a4:	ba 00 00 00 00       	mov    $0x0,%edx
 804a0a9:	a8 02                	test   $0x2,%al
 804a0ab:	74 0b                	je     804a0b8 <submitr+0x5f7>
 804a0ad:	0f b7 0c 16          	movzwl (%esi,%edx,1),%ecx
 804a0b1:	66 89 0c 17          	mov    %cx,(%edi,%edx,1)
 804a0b5:	83 c2 02             	add    $0x2,%edx
 804a0b8:	a8 01                	test   $0x1,%al
 804a0ba:	74 07                	je     804a0c3 <submitr+0x602>
 804a0bc:	0f b6 04 16          	movzbl (%esi,%edx,1),%eax
 804a0c0:	88 04 17             	mov    %al,(%edi,%edx,1)
 804a0c3:	8b 95 ac 5f ff ff    	mov    -0xa054(%ebp),%edx
 804a0c9:	89 14 24             	mov    %edx,(%esp)
 804a0cc:	e8 c3 e8 ff ff       	call   8048994 <close@plt>
 804a0d1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804a0d6:	eb 50                	jmp    804a128 <submitr+0x667>
 804a0d8:	8d 8d cc df ff ff    	lea    -0x2034(%ebp),%ecx
 804a0de:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 804a0e2:	8b b5 b0 5f ff ff    	mov    -0xa050(%ebp),%esi
 804a0e8:	89 34 24             	mov    %esi,(%esp)
 804a0eb:	e8 84 e8 ff ff       	call   8048974 <strcpy@plt>
 804a0f0:	8b bd ac 5f ff ff    	mov    -0xa054(%ebp),%edi
 804a0f6:	89 3c 24             	mov    %edi,(%esp)
 804a0f9:	e8 96 e8 ff ff       	call   8048994 <close@plt>
 804a0fe:	b8 c4 ae 04 08       	mov    $0x804aec4,%eax
 804a103:	0f b6 0e             	movzbl (%esi),%ecx
 804a106:	3a 08                	cmp    (%eax),%cl
 804a108:	75 19                	jne    804a123 <submitr+0x662>
 804a10a:	0f b6 4e 01          	movzbl 0x1(%esi),%ecx
 804a10e:	3a 48 01             	cmp    0x1(%eax),%cl
 804a111:	75 10                	jne    804a123 <submitr+0x662>
 804a113:	0f b6 56 02          	movzbl 0x2(%esi),%edx
 804a117:	3a 50 02             	cmp    0x2(%eax),%dl
 804a11a:	75 07                	jne    804a123 <submitr+0x662>
 804a11c:	b8 00 00 00 00       	mov    $0x0,%eax
 804a121:	eb 05                	jmp    804a128 <submitr+0x667>
 804a123:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804a128:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804a12b:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 804a132:	0f 84 90 00 00 00    	je     804a1c8 <submitr+0x707>
 804a138:	e9 86 00 00 00       	jmp    804a1c3 <submitr+0x702>
 804a13d:	8d 85 cc bf ff ff    	lea    -0x4034(%ebp),%eax
 804a143:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 804a147:	8b 8d 9c 5f ff ff    	mov    -0xa064(%ebp),%ecx
 804a14d:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 804a151:	8b b5 a0 5f ff ff    	mov    -0xa060(%ebp),%esi
 804a157:	89 74 24 14          	mov    %esi,0x14(%esp)
 804a15b:	8b bd a4 5f ff ff    	mov    -0xa05c(%ebp),%edi
 804a161:	89 7c 24 10          	mov    %edi,0x10(%esp)
 804a165:	c7 44 24 0c 44 ae 04 	movl   $0x804ae44,0xc(%esp)
 804a16c:	08 
 804a16d:	c7 44 24 08 00 20 00 	movl   $0x2000,0x8(%esp)
 804a174:	00 
 804a175:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 804a17c:	00 
 804a17d:	8d 85 cc df ff ff    	lea    -0x2034(%ebp),%eax
 804a183:	89 04 24             	mov    %eax,(%esp)
 804a186:	e8 49 e8 ff ff       	call   80489d4 <__sprintf_chk@plt>
 804a18b:	8d bd cc df ff ff    	lea    -0x2034(%ebp),%edi
 804a191:	b8 00 00 00 00       	mov    $0x0,%eax
 804a196:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 804a19b:	f2 ae                	repnz scas %es:(%edi),%al
 804a19d:	f7 d1                	not    %ecx
 804a19f:	89 cf                	mov    %ecx,%edi
 804a1a1:	83 ef 01             	sub    $0x1,%edi
 804a1a4:	0f 84 fa fc ff ff    	je     8049ea4 <submitr+0x3e3>
 804a1aa:	89 fb                	mov    %edi,%ebx
 804a1ac:	8d b5 cc df ff ff    	lea    -0x2034(%ebp),%esi
 804a1b2:	89 bd b4 5f ff ff    	mov    %edi,-0xa04c(%ebp)
 804a1b8:	8b bd ac 5f ff ff    	mov    -0xa054(%ebp),%edi
 804a1be:	e9 49 fc ff ff       	jmp    8049e0c <submitr+0x34b>
 804a1c3:	e8 dc e7 ff ff       	call   80489a4 <__stack_chk_fail@plt>
 804a1c8:	81 c4 7c a0 00 00    	add    $0xa07c,%esp
 804a1ce:	5b                   	pop    %ebx
 804a1cf:	5e                   	pop    %esi
 804a1d0:	5f                   	pop    %edi
 804a1d1:	5d                   	pop    %ebp
 804a1d2:	c3                   	ret    

0804a1d3 <driver_post>:
 804a1d3:	55                   	push   %ebp
 804a1d4:	89 e5                	mov    %esp,%ebp
 804a1d6:	53                   	push   %ebx
 804a1d7:	83 ec 24             	sub    $0x24,%esp
 804a1da:	8b 45 08             	mov    0x8(%ebp),%eax
 804a1dd:	8b 55 0c             	mov    0xc(%ebp),%edx
 804a1e0:	8b 5d 14             	mov    0x14(%ebp),%ebx
 804a1e3:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 804a1e7:	74 28                	je     804a211 <driver_post+0x3e>
 804a1e9:	89 54 24 08          	mov    %edx,0x8(%esp)
 804a1ed:	c7 44 24 04 c7 ae 04 	movl   $0x804aec7,0x4(%esp)
 804a1f4:	08 
 804a1f5:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804a1fc:	e8 a3 e6 ff ff       	call   80488a4 <__printf_chk@plt>
 804a201:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 804a206:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 804a20a:	b8 00 00 00 00       	mov    $0x0,%eax
 804a20f:	eb 49                	jmp    804a25a <driver_post+0x87>
 804a211:	85 c0                	test   %eax,%eax
 804a213:	74 37                	je     804a24c <driver_post+0x79>
 804a215:	80 38 00             	cmpb   $0x0,(%eax)
 804a218:	74 32                	je     804a24c <driver_post+0x79>
 804a21a:	89 5c 24 18          	mov    %ebx,0x18(%esp)
 804a21e:	89 54 24 14          	mov    %edx,0x14(%esp)
 804a222:	c7 44 24 10 de ae 04 	movl   $0x804aede,0x10(%esp)
 804a229:	08 
 804a22a:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804a22e:	c7 44 24 08 e6 ae 04 	movl   $0x804aee6,0x8(%esp)
 804a235:	08 
 804a236:	c7 44 24 04 6e 3b 00 	movl   $0x3b6e,0x4(%esp)
 804a23d:	00 
 804a23e:	c7 04 24 90 ae 04 08 	movl   $0x804ae90,(%esp)
 804a245:	e8 77 f8 ff ff       	call   8049ac1 <submitr>
 804a24a:	eb 0e                	jmp    804a25a <driver_post+0x87>
 804a24c:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 804a251:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 804a255:	b8 00 00 00 00       	mov    $0x0,%eax
 804a25a:	83 c4 24             	add    $0x24,%esp
 804a25d:	5b                   	pop    %ebx
 804a25e:	5d                   	pop    %ebp
 804a25f:	c3                   	ret    

0804a260 <__libc_csu_fini>:
 804a260:	55                   	push   %ebp
 804a261:	89 e5                	mov    %esp,%ebp
 804a263:	5d                   	pop    %ebp
 804a264:	c3                   	ret    
 804a265:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804a269:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804a270 <__libc_csu_init>:
 804a270:	55                   	push   %ebp
 804a271:	89 e5                	mov    %esp,%ebp
 804a273:	57                   	push   %edi
 804a274:	56                   	push   %esi
 804a275:	53                   	push   %ebx
 804a276:	e8 4f 00 00 00       	call   804a2ca <__i686.get_pc_thunk.bx>
 804a27b:	81 c3 79 1d 00 00    	add    $0x1d79,%ebx
 804a281:	83 ec 1c             	sub    $0x1c,%esp
 804a284:	e8 7b e5 ff ff       	call   8048804 <_init>
 804a289:	8d bb 18 ff ff ff    	lea    -0xe8(%ebx),%edi
 804a28f:	8d 83 18 ff ff ff    	lea    -0xe8(%ebx),%eax
 804a295:	29 c7                	sub    %eax,%edi
 804a297:	c1 ff 02             	sar    $0x2,%edi
 804a29a:	85 ff                	test   %edi,%edi
 804a29c:	74 24                	je     804a2c2 <__libc_csu_init+0x52>
 804a29e:	31 f6                	xor    %esi,%esi
 804a2a0:	8b 45 10             	mov    0x10(%ebp),%eax
 804a2a3:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a2a7:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a2aa:	89 44 24 04          	mov    %eax,0x4(%esp)
 804a2ae:	8b 45 08             	mov    0x8(%ebp),%eax
 804a2b1:	89 04 24             	mov    %eax,(%esp)
 804a2b4:	ff 94 b3 18 ff ff ff 	call   *-0xe8(%ebx,%esi,4)
 804a2bb:	83 c6 01             	add    $0x1,%esi
 804a2be:	39 fe                	cmp    %edi,%esi
 804a2c0:	72 de                	jb     804a2a0 <__libc_csu_init+0x30>
 804a2c2:	83 c4 1c             	add    $0x1c,%esp
 804a2c5:	5b                   	pop    %ebx
 804a2c6:	5e                   	pop    %esi
 804a2c7:	5f                   	pop    %edi
 804a2c8:	5d                   	pop    %ebp
 804a2c9:	c3                   	ret    

0804a2ca <__i686.get_pc_thunk.bx>:
 804a2ca:	8b 1c 24             	mov    (%esp),%ebx
 804a2cd:	c3                   	ret    
 804a2ce:	90                   	nop
 804a2cf:	90                   	nop

0804a2d0 <__do_global_ctors_aux>:
 804a2d0:	55                   	push   %ebp
 804a2d1:	89 e5                	mov    %esp,%ebp
 804a2d3:	53                   	push   %ebx
 804a2d4:	83 ec 04             	sub    $0x4,%esp
 804a2d7:	a1 0c bf 04 08       	mov    0x804bf0c,%eax
 804a2dc:	83 f8 ff             	cmp    $0xffffffff,%eax
 804a2df:	74 13                	je     804a2f4 <__do_global_ctors_aux+0x24>
 804a2e1:	bb 0c bf 04 08       	mov    $0x804bf0c,%ebx
 804a2e6:	66 90                	xchg   %ax,%ax
 804a2e8:	83 eb 04             	sub    $0x4,%ebx
 804a2eb:	ff d0                	call   *%eax
 804a2ed:	8b 03                	mov    (%ebx),%eax
 804a2ef:	83 f8 ff             	cmp    $0xffffffff,%eax
 804a2f2:	75 f4                	jne    804a2e8 <__do_global_ctors_aux+0x18>
 804a2f4:	83 c4 04             	add    $0x4,%esp
 804a2f7:	5b                   	pop    %ebx
 804a2f8:	5d                   	pop    %ebp
 804a2f9:	c3                   	ret    
 804a2fa:	90                   	nop
 804a2fb:	90                   	nop

Disassembly of section .fini:

0804a2fc <_fini>:
 804a2fc:	55                   	push   %ebp
 804a2fd:	89 e5                	mov    %esp,%ebp
 804a2ff:	53                   	push   %ebx
 804a300:	83 ec 04             	sub    $0x4,%esp
 804a303:	e8 00 00 00 00       	call   804a308 <_fini+0xc>
 804a308:	5b                   	pop    %ebx
 804a309:	81 c3 ec 1c 00 00    	add    $0x1cec,%ebx
 804a30f:	e8 3c e7 ff ff       	call   8048a50 <__do_global_dtors_aux>
 804a314:	59                   	pop    %ecx
 804a315:	5b                   	pop    %ebx
 804a316:	c9                   	leave  
 804a317:	c3                   	ret    
